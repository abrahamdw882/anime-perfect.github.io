<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>元渊`Blog</title>
  
  <subtitle>生活明朗,万物可爱</subtitle>
  <link href="https://www.yuanyuan.blog/atom.xml" rel="self"/>
  
  <link href="https://www.yuanyuan.blog/"/>
  <updated>2024-01-11T17:20:31.291Z</updated>
  <id>https://www.yuanyuan.blog/</id>
  
  <author>
    <name>元渊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dockerfile例子</title>
    <link href="https://www.yuanyuan.blog/posts/36423b00.html"/>
    <id>https://www.yuanyuan.blog/posts/36423b00.html</id>
    <published>2023-07-08T20:41:04.000Z</published>
    <updated>2024-01-11T17:20:31.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="centos">centos</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">MAINTAINER</span> liaojie1314&lt;<span class="number">1517438366</span>@qq.com&gt;</span><br><span class="line"><span class="keyword">ENV</span> MYPATH /usr/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /etc/yum.repos.d/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/mirrorlist/#mirrorlist/g&#x27;</span> /etc/yum.repos.d/CentOS-*</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&#x27;</span> /etc/yum.repos.d/CentOS-*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yum -y install net-tools</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;-----end----&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><h3 id="cuda-cudnn-tensorrt">cuda+cudnn+TensorRT</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ARG</span> CUDA_VERSION=<span class="number">11.4</span>.<span class="number">2</span></span><br><span class="line"><span class="keyword">ARG</span> OS_VERSION=<span class="number">20.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> nvidia/cuda:$&#123;CUDA_VERSION&#125;-cudnn8-devel-ubuntu$&#123;OS_VERSION&#125;</span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;liaojie1314&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> TRT_VERSION <span class="number">8.2</span>.<span class="number">0.6</span></span><br><span class="line"><span class="keyword">SHELL</span><span class="language-bash"> [<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-c&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Setup user account</span></span><br><span class="line"><span class="keyword">ARG</span> uid=<span class="number">1000</span></span><br><span class="line"><span class="keyword">ARG</span> gid=<span class="number">1000</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> groupadd -r -f -g <span class="variable">$&#123;gid&#125;</span> trtuser &amp;&amp; useradd -o -r -u <span class="variable">$&#123;uid&#125;</span> -g <span class="variable">$&#123;gid&#125;</span> -ms /bin/bash trtuser</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> usermod -aG sudo trtuser</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&#x27;trtuser:nvidia&#x27;</span> | chpasswd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> -p /workspace &amp;&amp; <span class="built_in">chown</span> trtuser /workspace</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Required to build Ubuntu 20.04 without user prompts with DLFW container</span></span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install requried libraries</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-key adv --recv-keys --keyserver keyserver.ubuntu.com A4B469963BF863CC &amp;&amp; apt-get update &amp;&amp; apt-get install -y software-properties-common</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> add-apt-repository ppa:ubuntu-toolchain-r/test</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y --no-install-recommends \</span></span><br><span class="line"><span class="language-bash">    libcurl4-openssl-dev \</span></span><br><span class="line"><span class="language-bash">    wget \</span></span><br><span class="line"><span class="language-bash">    zlib1g-dev \</span></span><br><span class="line"><span class="language-bash">    git \</span></span><br><span class="line"><span class="language-bash">    pkg-config \</span></span><br><span class="line"><span class="language-bash">    sudo \</span></span><br><span class="line"><span class="language-bash">    ssh \</span></span><br><span class="line"><span class="language-bash">    libssl-dev \</span></span><br><span class="line"><span class="language-bash">    pbzip2 \</span></span><br><span class="line"><span class="language-bash">    pv \</span></span><br><span class="line"><span class="language-bash">    bzip2 \</span></span><br><span class="line"><span class="language-bash">    unzip \</span></span><br><span class="line"><span class="language-bash">    devscripts \</span></span><br><span class="line"><span class="language-bash">    lintian \</span></span><br><span class="line"><span class="language-bash">    fakeroot \</span></span><br><span class="line"><span class="language-bash">    dh-make \</span></span><br><span class="line"><span class="language-bash">    build-essential</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install python3</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y --no-install-recommends \</span></span><br><span class="line"><span class="language-bash">      python3 \</span></span><br><span class="line"><span class="language-bash">      python3-pip \</span></span><br><span class="line"><span class="language-bash">      python3-dev \</span></span><br><span class="line"><span class="language-bash">      python3-wheel &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> /usr/local/bin &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">ln</span> -s /usr/bin/python3 python &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">ln</span> -s /usr/bin/pip3 pip;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install TensorRT</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> v=<span class="string">&quot;<span class="variable">$&#123;TRT_VERSION%.*&#125;</span>-1+cuda<span class="variable">$&#123;CUDA_VERSION%.*&#125;</span>&quot;</span> &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">    apt-get update &amp;&amp;\</span></span><br><span class="line"><span class="language-bash">    sudo apt-get install libnvinfer8=<span class="variable">$&#123;v&#125;</span> libnvonnxparsers8=<span class="variable">$&#123;v&#125;</span> libnvparsers8=<span class="variable">$&#123;v&#125;</span> libnvinfer-plugin8=<span class="variable">$&#123;v&#125;</span> \</span></span><br><span class="line"><span class="language-bash">        libnvinfer-dev=<span class="variable">$&#123;v&#125;</span> libnvonnxparsers-dev=<span class="variable">$&#123;v&#125;</span> libnvparsers-dev=<span class="variable">$&#123;v&#125;</span> libnvinfer-plugin-dev=<span class="variable">$&#123;v&#125;</span> \</span></span><br><span class="line"><span class="language-bash">        python3-libnvinfer=<span class="variable">$&#123;v&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install PyPI packages</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install --upgrade pip</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install setuptools&gt;=41.0.0</span></span><br><span class="line"><span class="comment"># COPY requirements.txt /tmp/requirements.txt</span></span><br><span class="line"><span class="comment"># RUN pip3 install -r /tmp/requirements.txt</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install jupyter jupyterlab</span></span><br><span class="line"><span class="comment"># Workaround to remove numpy installed with tensorflow</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install --upgrade numpy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Cmake</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /tmp &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">chmod</span> +x cmake-3.14.4-Linux-x86_64.sh &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    ./cmake-3.14.4-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> ./cmake-3.14.4-Linux-x86_64.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download NGC client</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /usr/local/bin &amp;&amp; wget https://ngc.nvidia.com/downloads/ngccli_cat_linux.zip &amp;&amp; unzip ngccli_cat_linux.zip &amp;&amp; <span class="built_in">cd</span> ngc-cli/ &amp;&amp; <span class="built_in">chmod</span> u+x ngc &amp;&amp; <span class="built_in">rm</span> ../ngccli_cat_linux.zip ../ngc-cli.md5 &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;no-apikey\nascii\n&quot;</span> | ./ngc config <span class="built_in">set</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set environment and working directory</span></span><br><span class="line"><span class="keyword">ENV</span> TRT_LIBPATH /usr/lib/x86_64-linux-gnu</span><br><span class="line"><span class="keyword">ENV</span> TRT_OSSPATH /workspace/TensorRT</span><br><span class="line"><span class="keyword">ENV</span> LD_LIBRARY_PATH=<span class="string">&quot;$&#123;LD_LIBRARY_PATH&#125;:$&#123;TRT_OSSPATH&#125;/build/out:$&#123;TRT_LIBPATH&#125;&quot;</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /workspace</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> trtuser</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> [<span class="string">&quot;/bin/bash&quot;</span>]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;centos&quot;&gt;centos&lt;/h3&gt;
&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose例子</title>
    <link href="https://www.yuanyuan.blog/posts/bad9d448.html"/>
    <id>https://www.yuanyuan.blog/posts/bad9d448.html</id>
    <published>2023-07-08T20:40:53.000Z</published>
    <updated>2024-01-11T17:20:31.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kavita漫画">Kavita漫画</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.9&#x27;</span><br><span class="line">services:</span><br><span class="line">    kavita:</span><br><span class="line">        image: kizaing/kavita:latest    # Change latest to nightly for latest develop builds (can&#x27;t go back to stable)</span><br><span class="line">        container_name: kavita</span><br><span class="line">        volumes:</span><br><span class="line">            - ./manga:/manga            # Manga is just an example you can have the name you want. See the following</span><br><span class="line">            - ./comics:/comics          # Use as many as you want</span><br><span class="line">            - ./books:/books            #</span><br><span class="line">            - ./data:/kavita/config     # Change &#x27;./data if you want to have the config files in a different place.</span><br><span class="line">                                        # /kavita/config must not be changed</span><br><span class="line">        environment:</span><br><span class="line">            - TZ=Your/Timezone</span><br><span class="line">        ports:</span><br><span class="line">            - &quot;5000:5000&quot; # Change the public port (the first 5000) if you have conflicts with other services</span><br><span class="line">        restart: unless-stopped</span><br></pre></td></tr></table></figure><h3 id="lazydocker">lazydocker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  lazydocker:</span><br><span class="line">    build:</span><br><span class="line">      context: https://github.com/jesseduffield/lazydocker.git</span><br><span class="line">      args:</span><br><span class="line">        BASE_IMAGE_BUILDER: golang</span><br><span class="line">        GOARCH: amd64</span><br><span class="line">        GOARM:</span><br><span class="line">    image: lazyteam/lazydocker</span><br><span class="line">    container_name: lazydocker</span><br><span class="line">    stdin_open: true</span><br><span class="line">    tty: true</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">      - ./config:/.config/jesseduffield/lazydocker</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;kavita漫画&quot;&gt;Kavita漫画&lt;/h3&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>jenv管理多版本jdk</title>
    <link href="https://www.yuanyuan.blog/posts/9f01ffa.html"/>
    <id>https://www.yuanyuan.blog/posts/9f01ffa.html</id>
    <published>2023-07-05T19:24:26.000Z</published>
    <updated>2024-01-11T17:20:31.295Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装">安装</h3><h4 id="linux-os-x">Linux / OS X</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jenv/jenv.git ~/.jenv</span><br></pre></td></tr></table></figure><h3 id="添加环境变量">添加环境变量</h3><h4 id="bash">Bash</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=&quot;$HOME/.jenv/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line">echo &#x27;eval &quot;$(jenv init -)&quot;&#x27; &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure><h4 id="zsh">Zsh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=&quot;$HOME/.jenv/bin:$PATH&quot;&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line">echo &#x27;eval &quot;$(jenv init -)&quot;&#x27; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="添加jdk位置">添加jdk位置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv add /usr/local/java/jdk1.8.0_371/</span><br></pre></td></tr></table></figure><h3 id="使用">使用</h3><h4 id="列出全部jdk">列出全部jdk</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jenv versions</span></span><br><span class="line">  system</span><br><span class="line">  oracle64-1.6.0.39</span><br><span class="line">* oracle64-1.7.0.11</span><br></pre></td></tr></table></figure><h4 id="设置全局jdk版本">设置全局jdk版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv global oracle64-1.6.0.39</span><br></pre></td></tr></table></figure><h4 id="设置全局jdk版本-每个目录">设置全局jdk版本(每个目录)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv local oracle64-1.6.0.39</span><br></pre></td></tr></table></figure><h4 id="设置终端jdk版本">设置终端jdk版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv shell oracle64-1.6.0.39</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;
&lt;h4 id=&quot;linux-os-x&quot;&gt;Linux / OS X&lt;/h4&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu22安装配置neo4j</title>
    <link href="https://www.yuanyuan.blog/posts/431eaa3e.html"/>
    <id>https://www.yuanyuan.blog/posts/431eaa3e.html</id>
    <published>2023-07-05T18:44:09.000Z</published>
    <updated>2024-01-11T17:20:31.295Z</updated>
    
    <content type="html"><![CDATA[<p>neo4j 5 对 jre 版本要求是 17 及以上，且最好是 openjdk，使用比较新的 ubuntu 系统安装比较好， centos7 因为没有维护，yum 找不到 openjdk-17了。</p><h3 id="安装-openjdk-17-可以不安装-安装neo4j时默认会安装">安装 openjdk-17(可以不安装,安装neo4j时默认会安装)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get -y install openjdk-17-jdk openjdk-17-dbg openjdk-17-jre </span><br><span class="line">java -version </span><br></pre></td></tr></table></figure><h3 id="添加-neo4j-的仓库">添加 neo4j 的仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://debian.neo4j.com/neotechnology.gpg.key | sudo apt-key add -</span><br><span class="line">echo &#x27;deb https://debian.neo4j.com stable latest&#x27; | sudo tee -a /etc/apt/sources.list.d/neo4j.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo add-apt-repository universe</span><br></pre></td></tr></table></figure><h3 id="安装-neo4j">安装 neo4j</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt list -a neo4j <span class="comment">#显示 neo4j 各个版本，选择自己需要的</span></span></span><br><span class="line">sudo apt-get -y install neo4j=1:5.5.0 # 选择 5.5 版本</span><br></pre></td></tr></table></figure><h3 id="查看版本">查看版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neo4j --version</span><br></pre></td></tr></table></figure><h3 id="设置初始密码">设置初始密码</h3><p>“<password>” 记得改成自己密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo neo4j-admin dbms set-initial-password &lt;password&gt;</span><br></pre></td></tr></table></figure><h3 id="修改-neo4j-监听地址">修改 neo4j 监听地址</h3><p>找到 neo4j 的配置文件，将服务监听地址改成全局地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neo4j/neo4j.conf</span><br></pre></td></tr></table></figure><p>取消掉如下 3 行的注释，保存配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.default_listen_address=0.0.0.0</span><br><span class="line">server.http.listen_address=:7474</span><br><span class="line">server.http.advertised_address=:7474</span><br></pre></td></tr></table></figure><h3 id="启动-neo4j-服务">启动 neo4j 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start neo4j.service</span><br></pre></td></tr></table></figure><p>ss -ntlp 看到 neo4j 监听端口，就说明启动成功了</p><p>访问 <a href="http://localhost:7474">http://localhost:7474</a>，输入账号 neo4j 以及自己设置的密码，就可以登录了。</p><h3 id="安装-apoc-插件">安装 apoc 插件</h3><p>Neo4j 5 版本 apoc 插件改成了两个部分 apoc-core 和 apoc-extend，5.5 版本就下 5.5 的插件</p><ul><li>apoc-core <a href="https://github.com/neo4j/apoc">GitHub - neo4j/apoc</a></li><li>apoc-extended  <a href="https://github.com/neo4j-contrib/neo4j-apoc-procedures">GitHub - neo4j-contrib/neo4j-apoc-procedures: Awesome Procedures On Cypher for Neo4j - codenamed “apoc”</a></li></ul><p>下好了后放到 neo4j 的 plugins 目录，这个目录可以在 neo4j.conf 中找到，本次安装默认配置的路径是 <strong>/var/lib/neo4j/plugins</strong></p><p>编辑 neo4j 配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neo4j/neo4j.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取消以下行的注释，添加 apoc 扩展</span></span><br><span class="line">dbms.security.procedures.unrestricted=apoc.*</span><br></pre></td></tr></table></figure><p>在 /etc/neo4j/ 目录下新建 apoc.conf 文件，添加 apoc 插件配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/neo4j/apoc.conf</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加如下行</span></span><br><span class="line">apoc.import.file.enabled=true</span><br><span class="line">apoc.import.file.use_neo4j_config=false</span><br></pre></td></tr></table></figure><p>重新启动 neo4j 访问</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;neo4j 5 对 jre 版本要求是 17 及以上，且最好是 openjdk，使用比较新的 ubuntu 系统安装比较好， centos7 因为没有维护，yum 找不到 openjdk-17了。&lt;/p&gt;
&lt;h3 id=&quot;安装-openjdk-17-可以不安装-安装neo4</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu终端美化</title>
    <link href="https://www.yuanyuan.blog/posts/969f7c6b.html"/>
    <id>https://www.yuanyuan.blog/posts/969f7c6b.html</id>
    <published>2023-07-04T11:59:45.000Z</published>
    <updated>2024-01-11T17:20:31.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="非root用户安装">非root用户安装</h2><p>本教程会安装zsh，autojump，zsh-autosuggestions，zsh-syntax-highlighting等插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">cd ~ # 到用户目录</span><br><span class="line">mkdir software # 创建目录，在该目录下安装zsh和其他插件</span><br><span class="line">cd software</span><br><span class="line">wget -O zsh.tar.xz https://sourceforge.net/projects/zsh/files/latest/download</span><br><span class="line">mkdir zsh &amp;&amp; unxz zsh.tar.xz &amp;&amp; tar -xvf zsh.tar -C zsh --strip-components 1</span><br><span class="line">cd zsh</span><br><span class="line"></span><br><span class="line">./configure --prefix=$HOME/software</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 安装路径放到PATH中</span></span><br><span class="line">echo &#x27;export PATH=&quot;$HOME/software/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行下面命令</span></span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line">cd ~/software # 回software目录，安装ohmyzsh，用于自动生成.zshrc文件</span><br><span class="line">git clone https://github.com/ohmyzsh/ohmyzsh.git</span><br><span class="line">cd ohmyzsh/tools/</span><br><span class="line">./install.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这儿会让选择是否将zsh设置为默认的shell，选择n</span></span><br><span class="line">echo &quot;zsh&quot; &gt;&gt; ~/.bashrc # 每次打开终端，在最后都让他去执行zsh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载安装 zsh-autosuggestions （自动补全可能路径）</span></span><br><span class="line">cd ~/software # 回到software目录，安装zsh-autosuggestions插件</span><br><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载 autojump （快速跳转）</span></span><br><span class="line">git clone https://github.com/joelthelion/autojump.git</span><br><span class="line">cd autojump</span><br><span class="line">./install.py   #如果这里提示没有安装 python，请自行安装python，可以考虑直接安装anaconda</span><br><span class="line"></span><br><span class="line">echo &quot;[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh&quot; &gt;&gt; ~/.zshrc </span><br><span class="line"></span><br><span class="line">cd ~/software # 回software目录，下载语法高亮插件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载安装 zsh-syntax-highlighting （终端输入高亮 正确路径下划线）</span></span><br><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新插件配置</span></span><br><span class="line">vi ~/.zshrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting)</span></span><br><span class="line">source .zshrc</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;非root用户安装&quot;&gt;非root用户安装&lt;/h2&gt;
&lt;p&gt;本教程会安装zsh，autojump，zsh-autosuggestions，zsh-syntax-highlighting等插件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu安装wine</title>
    <link href="https://www.yuanyuan.blog/posts/818c90c8.html"/>
    <id>https://www.yuanyuan.blog/posts/818c90c8.html</id>
    <published>2023-06-30T19:41:14.000Z</published>
    <updated>2024-01-11T17:20:31.295Z</updated>
    
    <content type="html"><![CDATA[<p>当我们在ubuntu中想要运行windows应用时，就需要安装wine。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">sudo apt update</span><br><span class="line">wget -qO- https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -</span><br><span class="line">sudo apt install software-properties-common</span><br><span class="line">sudo apt-add-repository &quot;deb http://dl.winehq.org/wine-builds/ubuntu/ $(lsb_release -cs) main&quot;</span><br><span class="line">sudo apt install --install-recommends winehq-stable</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看wine版本</span></span><br><span class="line">wine --version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当我们在ubuntu中想要运行windows应用时，就需要安装wine。&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>postgresql</title>
    <link href="https://www.yuanyuan.blog/posts/126df961.html"/>
    <id>https://www.yuanyuan.blog/posts/126df961.html</id>
    <published>2023-06-28T20:59:23.000Z</published>
    <updated>2024-01-11T17:20:31.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装postgresql">安装postgresql</h1><h2 id="在ubuntu上安装">在ubuntu上安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install postgresql postgresql-contrib</span><br></pre></td></tr></table></figure><p>我们同时安装 PostgreSQL contrib 软件包，它可以提供 PostgreSQL 数据库系统的一些额外特性。</p><p>一旦安装完成， PostgreSQL 服务将会自动启动。使用<code>psql</code>工具通过连接 PostgreSQL 数据库并且打印它的版本来验证安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -c &quot;SELECT version();&quot;</span><br></pre></td></tr></table></figure><h3 id="postgresql-角色和身份认证方式">PostgreSQL 角色和身份认证方式</h3><p>PostgreSQL 数据库访问权限是通过角色来处理的。一个角色代表一个数据库用户或者一个数据库用户组。</p><p>PostgreSQL 支持多种身份认证方式。最常用的方法如下：</p><ul><li>Trust - 只要满足<code>pg_hba.conf</code>定义的条件，一个角色就可以不使用密码就能连接服务器</li><li>Password - 通过密码，一个角色可以连接服务器。密码可以被存储为 scram-sha-256, md5, 和 password(明文)。</li><li>Ident - 仅仅支持 TCP/IP 连接。它通常通过一个可选的用户名映射表，获取客户端操作系统用户名。</li><li>Peer - 和 Ident 一样，仅仅支持本地连接。</li></ul><p>PostgreSQL 客户端身份验证通常被定义在<code>pg_hba.conf</code>文件中。默认情况下，对于本地连接，PostgreSQL 被设置成身份认证防范 peer。</p><p>为了以<code>postgres</code>用户身份登录 PostgreSQL 服务器，首先切换用户，然后使用<code>psql</code>工具访问 PostgreSQL并设置初始密码(方便使用数据库管理工具如navicat连接)。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo su - postgres</span><br><span class="line">psql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置初始密码</span></span><br><span class="line">\password postgres</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span></span><br><span class="line">ALTER USER postgres WITH PASSWORD &#x27;xxxxxx&#x27;;</span><br></pre></td></tr></table></figure><p>从这里开始，你可以与 PostgreSQL 实例交互。退出 PostgreSQL Shell，输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure><p>你也可以不切换用户，而使用<code>sudo</code>命令访问 PostgreSQL：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql</span><br></pre></td></tr></table></figure><p>通常，<code>postgres</code>用户仅仅在本地被使用。</p><h3 id="创建-postgresql-角色和数据库-可选">创建 PostgreSQL 角色和数据库(可选)</h3><p>仅仅超级用户和拥有<code>CREATEROLE</code>权限的角色可以创建新角色。</p><p>在下面的例子中，我们创建一个名称为<code>yuanyuan</code>的角色，一个名称为<code>yuanyuandb</code>的数据库，并且授予数据库上的权限：</p><p>01.创建一个新的 PostgreSQL 角色：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su - postgres -c &quot;createuser yuanyuan&quot;</span><br></pre></td></tr></table></figure><p>02.创建一个新的 PostgreSQL 数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su - postgres -c &quot;createdb yuanyuandb&quot;</span><br></pre></td></tr></table></figure><p>想要授权用户操作数据库，连接到 PostgreSQL shell:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql</span><br></pre></td></tr></table></figure><p>并且运行下面的 query:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on database yuanyuandb to yuanyuan;</span><br></pre></td></tr></table></figure><h3 id="启用远程访问-postgresql-服务器-可选">启用远程访问 PostgreSQL 服务器(可选)</h3><p>默认情况下，PostgreSQL 服务器仅仅监听本地网络接口：<code>127.0.0.1</code>。</p><p>为了允许远程访问你的 PostgreSQL 服务器，打开配置文件<code>postgresql.conf</code>并且在<code>CONNECTIONS AND AUTHENTICATION</code>一节添加<code>listen_addresses = '*'</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/postgresql/12/main/postgresql.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">------------------------------------------------------------------------------</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CONNECTIONS AND AUTHENTICATION</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">------------------------------------------------------------------------------</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">- Connection Settings -</span></span><br><span class="line"></span><br><span class="line">listen_addresses = &#x27;*&#x27;     # what IP address(es) to listen on;</span><br></pre></td></tr></table></figure><p>保存文件并且重启 PostgreSQL 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service postgresql restart</span><br></pre></td></tr></table></figure><p>使用<code>ss</code>工具验证修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -nlt | grep 5432</span><br></pre></td></tr></table></figure><p>输出显示 PostgreSQL 服务器正在监听所有的网络接口(<code>0.0.0.0</code>):</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LISTEN  0        244              0.0.0.0:5432           0.0.0.0:*              </span><br><span class="line">LISTEN  0        244                 [::]:5432              [::]:*</span><br></pre></td></tr></table></figure><p>下一步就是配置服务器接受远程连接，编辑<code>pg_hba.conf</code>文件。</p><p>下面是一些例子，显示不同的用户场景：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># TYPE  DATABASE        USER            ADDRESS                 METHOD</span><br><span class="line"></span><br><span class="line"># The user yuanyuan can access all databases from all locations using md5 password</span><br><span class="line">host    all             yuanyuan        0.0.0.0/0                md5</span><br><span class="line"></span><br><span class="line"># The user yuanyuan can access only the yuanyuandb from all locations using md5 password</span><br><span class="line">host    yuanyuandb      yuanyuan        0.0.0.0/0                md5</span><br><span class="line"></span><br><span class="line"># The user yuanyuan can access all databases from a trusted location (192.168.1.134) without a password</span><br><span class="line">host    all             yuanyuan        192.168.1.134            trust</span><br></pre></td></tr></table></figure><p>最后一步就是在你的防火墙上打开端口<code>5432</code>端口。</p><p>假设你正在使用<code>UFW</code>来管理你的防火墙，并且你想允许从<code>192.168.1.0/24</code>子网过来的访问，你应该运行下面的命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow proto tcp from 192.168.1.0/24 to any port 5432</span><br></pre></td></tr></table></figure><p>确保你的防火墙被配置好，并仅仅接受来自受信任 IP 范围的连接。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装postgresql&quot;&gt;安装postgresql&lt;/h1&gt;
&lt;h2 id=&quot;在ubuntu上安装&quot;&gt;在ubuntu上安装&lt;/h2&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker安装images</title>
    <link href="https://www.yuanyuan.blog/posts/2778985e.html"/>
    <id>https://www.yuanyuan.blog/posts/2778985e.html</id>
    <published>2023-06-22T16:57:04.000Z</published>
    <updated>2024-01-11T17:20:31.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="nacos">nacos</h3><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nacos/nacos-server:<span class="number">1.2</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;nacos&quot;&gt;nacos&lt;/h3&gt;
&lt;figure class=&quot;highlight docker&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>dos常用指令</title>
    <link href="https://www.yuanyuan.blog/posts/5784a051.html"/>
    <id>https://www.yuanyuan.blog/posts/5784a051.html</id>
    <published>2023-05-03T20:10:06.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="dos-的基本介绍">dos 的基本介绍</h2><p>Dos： Disk Operating System 磁盘操作系统, 简单说一下 windows 的目录结构</p><h2 id="dos-的基本操作原理">dos 的基本操作原理</h2><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503201204.png" alt="image-20230503201204522"></p><h2 id="目录操作指令">目录操作指令</h2><p>查看当前目录是什么</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503201247.png" alt="image-20230503201247375"></p><h3 id="切换目录">切换目录</h3><p>切换到其他盘下：盘符号 F 盘</p><p>案例演示：</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503201328.png" alt="image-20230503201328280"></p><p>切换到当前盘的其他目录下 (使用相对路径和绝对路径演示)<br>案例演示：</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503201348.png" alt="image-20230503201348645"></p><p>切换到上一级：</p><blockquote><p>cd …</p></blockquote><p>切换到根目录：</p><blockquote><p>cd \</p></blockquote><h3 id="新建目录-md-make-directory">新建目录 md （make directory）</h3><p>新建一个目录：</p><blockquote><p>md dirName</p></blockquote><p>新建多个目录：</p><blockquote><p>md dirName1 dirName2</p></blockquote><h3 id="删除目录">删除目录</h3><p>删除空目录</p><blockquote><p>rd dirName</p></blockquote><p>删除目录以及下面的子目录和文件，不带询问</p><blockquote><p>rd /q/s dirName</p></blockquote><p>删除目录以及下面的子目录和文件，带询问</p><blockquote><p>rd /s dirName</p></blockquote><h2 id="文件的操作">文件的操作</h2><h3 id="新建或追加内容到文件">新建或追加内容到文件</h3><blockquote><p>echo xxx &gt; d:\1.txt</p><p>echo xxx &gt; 2.txt</p></blockquote><h3 id="复制或移动文件">复制或移动文件</h3><p>复制</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503201856.png" alt="image-20230503201848117"></p><p>移动</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503201916.png" alt="image-20230503201916469"></p><h3 id="删除文件">删除文件</h3><p>删除指定文件</p><blockquote><p>del 1.txt</p><p>del /f “Read Only Test File.txt”  强制删除文件</p></blockquote><p>删除所有txt文件</p><blockquote><p>del *.txt</p></blockquote><h2 id="其它指令">其它指令</h2><h3 id="清屏">清屏</h3><blockquote><p>cls</p></blockquote><h3 id="退出-dos">退出 dos</h3><blockquote><p>exit</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;dos-的基本介绍&quot;&gt;dos 的基本介绍&lt;/h2&gt;
&lt;p&gt;Dos： Disk Operating System 磁盘操作系统, 简单说一下 windows 的目录结构&lt;/p&gt;
&lt;h2 id=&quot;dos-的基本操作原理&quot;&gt;dos 的基本操作原理&lt;/h2&gt;
&lt;p&gt;&lt;im</summary>
      
    
    
    
    <category term="运维" scheme="https://www.yuanyuan.blog/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="dos" scheme="https://www.yuanyuan.blog/tags/dos/"/>
    
  </entry>
  
  <entry>
    <title>go基础1变量</title>
    <link href="https://www.yuanyuan.blog/posts/1d8fb141.html"/>
    <id>https://www.yuanyuan.blog/posts/1d8fb141.html</id>
    <published>2023-05-03T20:09:14.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要变量">为什么需要变量</h2><h3 id="变量是程序的基本组成单位">变量是程序的基本组成单位</h3><p>不论是使用哪种高级程序语言编写程序,变量都是其程序的基本组成单位</p><h2 id="变量的介绍">变量的介绍</h2><h3 id="变量的概念">变量的概念</h3><p>变量相当于内存中一个数据存储空间的表示，你可以把变量看做是一个房间的门<br>牌号，通过门牌号我们可以找到房间，同样的道理，通过变量名可以访问到变量<br>(值)。</p><h3 id="变量的使用步骤">变量的使用步骤</h3><ol><li>声明变量(也叫:定义变量)</li><li>非变量赋值</li><li>使用变量</li></ol><h2 id="变量快速入门案例">变量快速入门案例</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 定义变量</span></span><br><span class="line"><span class="keyword">var</span> i <span class="type">int</span></span><br><span class="line"><span class="comment">// 给 i 赋值</span></span><br><span class="line">i = <span class="number">10</span></span><br><span class="line">fmt.Println(<span class="string">&quot;i=&quot;</span>, i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量使用注意事项">变量使用注意事项</h2><ol><li><p>变量表示内存中的一个存储区域</p></li><li><p>该区域有自己的名称（变量名）和类型（数据类型）<br>示意图：</p></li><li><p>Golang 变量使用的三种方式<br>(1) 第一种：指定变量类型，声明后若不赋值，使用默认值</p></li></ol>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="type">int</span></span><br></pre></td></tr></table></figure><p>(2) 第二种：根据值自行判定变量类型(类型推导)</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10.11</span></span><br></pre></td></tr></table></figure><p>(3) 第三种：省略 var, 注意 :=左侧的变量不应该是已经声明过的，否则会导致编译错误</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name := <span class="string">&quot;yuanyuan&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>多变量声明<br>在编程中，有时我们需要一次性声明多个变量，Golang 也提供这样的语法<br>举例说明:</li></ol>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a, b, c := <span class="number">100</span>, <span class="string">&quot;yuanyuan&quot;</span>, <span class="number">10.11</span></span><br></pre></td></tr></table></figure><p>如何一次性声明多个全局变量【在 go 中函数外部定义变量就是全局变量】：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    n1 = <span class="number">100</span></span><br><span class="line">    n2 = <span class="number">200</span></span><br><span class="line">    n3 = <span class="number">300</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ol start="5"><li><p>该区域的数据值可以在同一类型范围内不断变化(重点)</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521202852.png" alt="image-20230521202852285"></p></li><li><p>变量在同一个作用域(在一个函数或者在代码块)内不能重名</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521202947.png" alt="image-20230521202947250"></p></li></ol><ol start="7"><li>变量=变量名+值+数据类型，这一点请大家注意，变量的三要素</li><li>Golang 的变量如果没有赋初值，编译器会使用默认值, 比如 int 默认值 0, string 默认值为空串，小数默认为 0</li></ol><h2 id="变量的声明-初始化和赋值">变量的声明，初始化和赋值</h2><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521203122.png" alt="image-20230521203121828"></p><h2 id="程序中-号的使用">程序中 + 号的使用</h2><ol><li>当左右两边都是数值型时，则做加法运算</li><li>当左右两边都是字符串，则做字符串拼接</li></ol><h2 id="数据类型的基本介绍">数据类型的基本介绍</h2><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521203315.png" alt="image-20230521203315069"></p><h2 id="整数类型">整数类型</h2><h3 id="基本介绍">基本介绍</h3><p>简单的说，就是用于存放整数值的，比如 0, -1, 2345 等等。</p><h3 id="整数的各个类型">整数的各个类型</h3><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521203551.png" alt="image-20230521203550762"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="type">int</span> = <span class="number">1</span></span><br><span class="line">fmt.Println(<span class="string">&quot;i=&quot;</span>, i)</span><br><span class="line"><span class="comment">// int8范围 -128~127</span></span><br><span class="line"><span class="keyword">var</span> j <span class="type">int8</span> = <span class="number">127</span></span><br><span class="line">fmt.Println(<span class="string">&quot;j=&quot;</span>, j)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>int 的无符号的类型：</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521204508.png" alt="image-20230521204508320"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> k <span class="type">uint16</span> = <span class="number">255</span></span><br><span class="line">fmt.Println(<span class="string">&quot;k=&quot;</span>, k)</span><br></pre></td></tr></table></figure><p>int 的其它类型的说明:</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521204543.png" alt="image-20230521204543576"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="type">int</span> = <span class="number">8900</span></span><br><span class="line">fmt.Println(<span class="string">&quot;a=&quot;</span>, a)</span><br><span class="line"><span class="keyword">var</span> b <span class="type">uint</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> c <span class="type">byte</span> = <span class="number">255</span></span><br><span class="line">fmt.Println(<span class="string">&quot;b=&quot;</span>, b, <span class="string">&quot;c=&quot;</span>, c)</span><br></pre></td></tr></table></figure><h3 id="整型的使用细节">整型的使用细节</h3><ol><li><p>Golang 各整数类型分：有符号和无符号，int uint 的大小和系统有关。</p></li><li><p>Golang 的整型默认声明为 int 型</p></li><li><p>如何在程序查看某个变量的字节大小和数据类型 （使用较多）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;unsafe&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="type">int64</span> = <span class="number">255</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a的类型 %T 占用的字节数 %d&quot;</span>, a,unsafe.Sizeof(a))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li>Golang 程序中整型变量在使用时，遵守保小不保大的原则，即：在保证程序正确运行下，尽量<br>使用占用空间小的数据类型。【如：年龄使用byte类型】</li></ol><ol start="5"><li>bit: 计算机中的最小存储单位。byte:计算机中基本存储单元。 1byte = 8 bit</li></ol><h2 id="小数类型-浮点型">小数类型/浮点型</h2><h3 id="基本介绍">基本介绍</h3><p>小数类型就是用于存放小数的，比如 1.2 0.23 -1.911</p><h3 id="小数类型分类">小数类型分类</h3><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230521205340.png" alt="image-20230521205339751"></p><ol><li>关于浮点数在机器中存放形式的简单说明,浮点数=符号位+指数位+尾数位<br>说明：浮点数都是有符号的.</li><li>尾数部分可能丢失，造成精度损失。 -123.0000901<br>说明：float64 的精度比 float32 的要准确.<br>说明：如果我们要保存一个精度高的数，则应该选用 float64</li><li>浮点型的存储分为三部分：符号位+指数位+尾数位 在存储过程中，精度会有丢失</li></ol><h3 id="浮点型使用细节">浮点型使用细节</h3><ol><li>Golang 浮点类型有固定的范围和字段长度，不受具体 OS(操作系统)的影响。</li><li>Golang 的浮点型默认声明为 float64 类型。</li><li>浮点型常量有两种表示形式<br>十进制数形式：  如：5.12        .512(必须有小数点）<br>科学计数法形式: 如：5.1234e2= 5.12 * 10 的 2 次方       5.12E-2 = 5.12/10 的 2 次方</li><li>通常情况下，应该使用 float64 ，因为它比 float32 更精确。[开发中，推荐使用 float64]</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么需要变量&quot;&gt;为什么需要变量&lt;/h2&gt;
&lt;h3 id=&quot;变量是程序的基本组成单位&quot;&gt;变量是程序的基本组成单位&lt;/h3&gt;
&lt;p&gt;不论是使用哪种高级程序语言编写程序,变量都是其程序的基本组成单位&lt;/p&gt;
&lt;h2 id=&quot;变量的介绍&quot;&gt;变量的介绍&lt;/h2&gt;
&lt;h3 </summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.yuanyuan.blog/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="golang" scheme="https://www.yuanyuan.blog/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>mongodb安装</title>
    <link href="https://www.yuanyuan.blog/posts/40605bfe.html"/>
    <id>https://www.yuanyuan.blog/posts/40605bfe.html</id>
    <published>2023-05-02T16:09:25.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows安装mongodb">windows安装mongodb</h2><h3 id="下载文件">下载文件</h3><p>首先在mongodb的官方网站上下载最新版本的mongodb安装程序</p><p>下载网址：<a href="https://www.mongodb.com/try/download/community?tck=docs_server">MongoDB Community Download | MongoDB</a></p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503183640.png" alt="image-20230503183639389" style="zoom: 50%;" /><h3 id="安装">安装</h3><p>下载好后双击安装，目录自行选择，这里以安装在E目录为例</p><p>安装好后原本是没有data文件和log文件夹的，这里我们需要自己手动创建这两个文件夹，并且要在data文件夹中在创建一个db文件夹</p><h3 id="启动应用服务">启动应用服务</h3><p>以管理员身份运行cmd命令窗口，并进入至E:\MongoDB\bin目录下，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --dbpath E:\MongoDB\data\db</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503184044.png" alt="image-20230503184044345"></p><p>再打开一个cmd命令窗口，并且还是以管理员身份打开，进入到E:\MongoDB\bin目录下，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503184140.png" alt="image-20230503184139974"></p><p>如果出现这个界面就说明MongoDb已经启动成功了，但是要注意，这两个cmd命令框关闭后那么MongoDB也就结束服务了</p><h3 id="使用配置文件启动mongodb服务">使用配置文件启动MongoDB服务</h3><p>在<strong>E:\MongoDB\config</strong>下创建一个<strong>mongodb.conf</strong>文件，加入配置文件与直接运行命令的效果是一样的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dbpath=E:\MongoDb\data\db             # 数据库文件</span><br><span class="line">logpath=E:\MongoDB\log\mongodb.log    # 日志文件</span><br><span class="line">logappend=true                        # 日志采用追加模式，配置后mongodb日志会追加到现有的日志文件，不会重新创建一个新文件</span><br><span class="line">journal=true                          # 启用日志文件，默认启用</span><br><span class="line">quiet=true                            # 这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为 false</span><br><span class="line">port=27017                            # 端口号 默认为 27017</span><br></pre></td></tr></table></figure><p>然后运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc create MongoDB binPath= &quot;E:\MongoDB\bin\mongod.exe --service --config=E:\MongoDb\config\mongodb.conf&quot;</span><br></pre></td></tr></table></figure><h3 id="添加环境变量">添加环境变量</h3><p>此时进入至mongodb的目录才可以使用mongodb的命令行工具，如果在其他的目录，是不可以使用mongodb的命令行工具的，我们可以将mongodb的目录加入至环境变量，这样在任何位置都可以使用mongodb命令行工具了</p><p>将mongodb的bin目录加入至path环境变量中即可</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503184610.png" alt="image-20230503184609716"></p><h2 id="ubuntu安装mongodb">ubuntu安装mongodb</h2><h3 id="导入包管理系统使用的公钥">导入包管理系统使用的公钥</h3><p>从终端安装<code>gnupg</code>（如果尚不可用）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnupg</span><br></pre></td></tr></table></figure><p>发出以下命令以导入 MongoDB 公共 GPG 密钥https://pgp.mongodb.com/server-6.0.asc：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://pgp.mongodb.com/server-6.0.asc | \</span><br><span class="line">   sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg \</span><br><span class="line">   --dearmor</span><br></pre></td></tr></table></figure><h3 id="为-mongodb-创建一个列表文件">为 MongoDB 创建一个列表文件</h3><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230502161557.png" alt="image-20230502161556772"></p><p><code>/etc/apt/sources.list.d/mongodb-org-6.0.list</code>为您的 Ubuntu 版本创建列表文件 。</p><p>单击适合您的 Ubuntu 版本的选项卡。如果您不确定主机正在运行哪个 Ubuntu 版本，请在主机上打开终端或 shell 并执行<code>lsb_release -dc</code>.</p><div class="tabs" id="mongodb-org-6.0.list"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mongodb-org-6.0.list-1">Ubuntu 22.04 Jammy)</button></li><li class="tab"><button type="button" data-href="#mongodb-org-6.0.list-2">Ubuntu 20.04 (Focal)</button></li><li class="tab"><button type="button" data-href="#mongodb-org-6.0.list-3">Ubuntu 18.04 (Bionic)</button></li><li class="tab"><button type="button" data-href="#mongodb-org-6.0.list-4">Ubuntu 16.04 (Xenial)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mongodb-org-6.0.list-1"><p><code>/etc/apt/sources.list.d/mongodb-org-6.0.list</code> 为**Ubuntu 22.04 (Jammy)**创建 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mongodb-org-6.0.list-2"><p><code>/etc/apt/sources.list.d/mongodb-org-6.0.list</code> 为**Ubuntu 20.04 (Focal)**创建 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mongodb-org-6.0.list-3"><p><code>/etc/apt/sources.list.d/mongodb-org-6.0.list</code> 为**Ubuntu 18.04 (Bionic)**创建 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/6.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mongodb-org-6.0.list-4"><p><code>/etc/apt/sources.list.d/mongodb-org-6.0.list</code> 为**Ubuntu 16.04 (Xenial)**创建 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/6.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="重新加载本地包数据库">重新加载本地包数据库</h3><p>发出以下命令重新加载本地包数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="安装-mongodb-包">安装 MongoDB 包</h3><div class="tabs" id="mongodb-org-6.0.list"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mongodb-org-6.0.list-1">安装最新稳定版本的 MongoDB</button></li><li class="tab"><button type="button" data-href="#mongodb-org-6.0.list-2">安装特定版本的 MongoDB</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mongodb-org-6.0.list-1"><p>要安装最新的稳定版本，请发出以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mongodb-org-6.0.list-2"><p>要安装特定版本，您必须单独指定每个组件包以及版本号，如下例所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y mongodb-org=6.0.7 mongodb-org-database=6.0.7 mongodb-org-server=6.0.7 mongodb-org-mongos=6.0.7 mongodb-org-tools=6.0.7</span><br></pre></td></tr></table></figure><p>如果您只安装<code>mongodb-org=6.0.7</code>而不包含组件包，则无论您指定哪个版本，都将安装每个 MongoDB 包的最新版本。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>尽管您可以指定 MongoDB 的任何可用版本， <code>apt-get</code>但当有新版本可用时将升级包。为了防止意外升级，您可以将软件包固定在当前安装的版本上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;mongodb-org hold&quot; | sudo dpkg --set-selections</span><br><span class="line">echo &quot;mongodb-org-database hold&quot; | sudo dpkg --set-selections</span><br><span class="line">echo &quot;mongodb-org-server hold&quot; | sudo dpkg --set-selections</span><br><span class="line">echo &quot;mongodb-mongosh hold&quot; | sudo dpkg --set-selections</span><br><span class="line">echo &quot;mongodb-org-mongos hold&quot; | sudo dpkg --set-selections</span><br><span class="line">echo &quot;mongodb-org-tools hold&quot; | sudo dpkg --set-selections</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230502161939.png" alt="image-20230502161939006"></p><h2 id="docker-安装-mongodb">Docker 安装 MongoDB</h2><h3 id="拉取指定版本mongodb镜像">拉取指定版本MongoDB镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mongo:4.4</span><br></pre></td></tr></table></figure><h3 id="运行容器">运行容器</h3><p>运行 mongo 容器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name mongo -v 本地目录:/data/db -p 27017:27017 mongo:4.4 --auth</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>-p 27017:27017</strong> ：映射容器服务的 27017(后) 端口到宿主机的 27017(前) 端口,外部可以直接通过 宿主机 ip:27017 访问到 mongo 的服务。</li><li><strong>–auth</strong>：需要密码才能访问容器服务。</li></ul><h3 id="进入容器-并进入到admin数据库">进入容器，并进入到admin数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mongo mongo admin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230502170129.png" alt="image-20230502170128664"></p><h2 id="mongodb基础配置">mongodb基础配置</h2><h3 id="创建一个超级管理员root">创建一个超级管理员root</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;your password&quot;, roles: [ &#123; role: &quot;root&quot;, db: &quot;admin&quot; &#125; ]&#125;);</span><br><span class="line">db.createUser(&#123; user:&#x27;root&#x27;,pwd:&#x27;your password&#x27;,roles:[ &#123; role:&#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27;&#125;,&#x27;readWriteAnyDatabase&#x27;]&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230502162144.png" alt="image-20230502162144553"></p><h3 id="验证用户是否添加成功">验证用户是否添加成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.auth(&quot;root&quot;, &quot;your password&quot;) #如果返回1，则表示成功</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230502162538.png" alt="image-20230502162537800"></p><h3 id="修改默认端口和希望外网访问-可选">修改默认端口和希望外网访问(可选)</h3><p><strong>vim /etc/mongodb.conf</strong></p><p>修改端口</p><p><strong>port=端口号</strong></p><p>外网访问</p><p>将<strong>bind_ip = 127.0.0.1</strong>修改<strong>bind_ip = 0.0.0.0</strong>，同时记得关闭防火墙</p><blockquote><p>开启服务</p></blockquote><p>sudo service mongodb start</p><blockquote><p>停止服务</p></blockquote><p>sudo service mongodb stop</p><blockquote><p>重启服务</p></blockquote><p>sudo service mongodb restart</p><p>修改端口后进入mongodb:<strong>mongo --port 端口号</strong></p><div class="tip warning faa-horizontal animated-hover"><p>必须另外创建自己的数据库和对应的用户，root数据库不能直接使用</p></div><h2 id="卸载-mongodb-社区版-ubuntu">卸载 MongoDB 社区版(ubuntu)</h2><h3 id="停止-mongodb">停止 MongoDB</h3><p><a href="https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod"><code>mongod</code></a>通过发出以下命令来停止该进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongod stop</span><br></pre></td></tr></table></figure><h3 id="删除包">删除包</h3><p>删除您之前安装的所有 MongoDB 软件包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge mongodb-org*</span><br></pre></td></tr></table></figure><h3 id="删除数据目录">删除数据目录</h3><p>删除 MongoDB 数据库和日志文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -r /var/log/mongodb</span><br><span class="line">sudo rm -r /var/lib/mongodb</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;windows安装mongodb&quot;&gt;windows安装mongodb&lt;/h2&gt;
&lt;h3 id=&quot;下载文件&quot;&gt;下载文件&lt;/h3&gt;
&lt;p&gt;首先在mongodb的官方网站上下载最新版本的mongodb安装程序&lt;/p&gt;
&lt;p&gt;下载网址：&lt;a href=&quot;https://w</summary>
      
    
    
    
    <category term="安装" scheme="https://www.yuanyuan.blog/categories/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="mongodb" scheme="https://www.yuanyuan.blog/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>go基础开篇</title>
    <link href="https://www.yuanyuan.blog/posts/2a8a7182.html"/>
    <id>https://www.yuanyuan.blog/posts/2a8a7182.html</id>
    <published>2023-05-02T16:04:38.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hello-world">hello world</h2><p>作为每一门语言的入门，那必须是会打印<strong>hello world</strong></p><ol><li>hello.go</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明:</p><p>（1）go 文件的后缀是 .go</p><p>（2） package main<br>表示该 hello.go 文件所在的包是 main, 在 go 中，每个文件都必须归属于一个包。</p><p>（3）import “fmt”<br>表示：引入一个包，包名 fmt, 引入该包后，就可以使用 fmt 包的函数，比如：fmt.Println</p><p>（4）func 是一个关键字，表示一个函数。<br>main 是函数名，是一个主函数，即我们程序的入口。</p><p>（5）fmt.Println(“hello world!”)<br>表示调用 fmt 包的函数 Println 输出&quot;hello world!&quot;</p><ol start="2"><li><p>通过 go build 命令对该 go 文件进行编译，windows下生成 hello.exe 文件,linux下生成hello可执行文件</p></li><li><p>windows下运行 hello.exe,linux运行./hello即可</p></li><li><p>注意：通过 go run 命令可以直接运行 hello.go 程序 [类似执行一个脚本文件的形式]</p></li></ol><h3 id="golang-执行流程分析">Golang 执行流程分析</h3><blockquote><p>如果是对源码编译后，再执行，Go 的执行流程如下图</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503193432.png" alt="image-20230503193432455"></p><blockquote><p>如果我们是对源码直接 执行 go run 源码，Go 的执行流程如下图</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503193445.png" alt="image-20230503193445207"></p><blockquote><p>两种执行流程的方式区别</p></blockquote><ol><li>如果我们先编译生成了可执行文件，那么我们可以将该可执行文件拷贝到没有 go 开发环境的机<br>器上，仍然可以运行</li><li>如果我们是直接 go run<br>go 源代码，那么如果要在另外一个机器上这么运行，也需要 go 开发<br>环境，否则无法执行。</li><li>在编译时，编译器会将程序运行依赖的库文件包含在可执行文件中，所以，可执行文件变大了<br>很多。</li></ol><h3 id="编译和运行说明">编译和运行说明</h3><ol><li><p>有了 go 源文件，通过编译器将其编译成机器可以识别的二进制码文件。</p></li><li><p>在该源文件目录下，通过 go build对 hello.go文件进行编译。可以指定生成的可执行文件名，在windows下必须是 .exe 后缀。</p></li><li><p>如果程序没有错误，没有任何提示，会在当前目录下会出现一个可执行文件(windows 下是.exe<br>Linux 下是一个可执行文件)，该文件是二进制码文件，也是可以执行的程序。</p></li><li><p>如果程序有错误，编译时，会在错误的那行报错，有助于程序员调试错误.</p></li><li><p>运行有两种形式</p><p>windows下运行 hello.exe</p><p>linux运行./hello</p></li></ol><h3 id="go-程序开发的注意事项">Go 程序开发的注意事项</h3><ol><li>Go 源文件以 “.go” 为扩展名。</li><li>Go 应用程序的执行入口是 main()函数， 这个是和其它编程语言一样（比如 java/c）</li><li>Go 语言严格区分大小写。</li><li>Go 方法由一条条语句构成，每个语句后不需要分号(Go 语言会在每行后自动加分号)，这也体<br>现出Golang的简洁性。</li><li>Go 编译器是一行行进行编译的，因此我们一行就写一条语句，不能把多条语句写在同一个，否<br>则报错。</li><li>go 语言定义的变量或者 import 的包如果没有使用到，代码不能编译通过。</li><li>大括号都是成对出现的，缺一不可。</li></ol><h2 id="go-语言的转义字符-escape-char">Go 语言的转义字符(escape char)</h2><p>说明:常用的转义字符有如下:</p><ol><li><code>\t</code> : 表示一个制表符，通常使用它可以排版。</li><li><code>\n</code>：换行符</li><li><code>\\</code>：一个\</li><li><code>\&quot;</code>：一个&quot;</li><li><code>\r</code>：一个回车</li></ol><p>案例：</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503194340.png" alt="image-20230503194340298"></p><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;姓名\t 年龄\t 籍贯\t 地址\njohn\t20\t 河北\t 北京&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="注释-comment">注释(comment)</h2><h3 id="介绍">介绍</h3><p>用于注解说明解释程序的文字就是注释，注释提高了代码的阅读性；<br>注释是一个程序员必须要具有的良好编程习惯。将自己的思想通过注释先整理出来，再用代码去<br>体现。</p><h3 id="在-golang-中注释有两种形式">在 Golang 中注释有两种形式</h3><ol><li>行注释</li></ol><blockquote><p>基本语法<br>// 注释内容</p></blockquote><ol start="2"><li><p>块注释(多行注释)</p><blockquote><p>基本语法<br>/*<br>注释内容<br>*/</p></blockquote></li></ol><p>使用细节</p><ol><li>对于行注释和块注释，被注释的文字，不会被 Go 编译器执行。</li><li><strong>块注释里面不允许有块注释嵌套</strong></li></ol><h2 id="规范的代码风格">规范的代码风格</h2><h3 id="正确的注释和注释风格：">正确的注释和注释风格：</h3><p>Go 官方推荐使用行注释来注释整个方法和语句。</p><h3 id="正确的缩进和空白">正确的缩进和空白</h3><ol><li>使用一次 tab 操作，实现缩进，默认整体向右边移动，时候用 shift+tab 整体向左移</li><li>或者使用 gofmt 来进行格式化</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -w main.go <span class="comment"># 该命令可以将格式化后的内容重新写入到文件</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>运算符两边习惯性各加一个空格。比如：2 + 4 * 5。</p></li><li><p>Go 语言的代码风格</p></li></ol>  <div class="tabs" id="style"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#style-1">正确写法</button></li><li class="tab"><button type="button" data-href="#style-2">错误写法</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="style-1"><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;hello,world!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="style-2"><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line">&#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;hello,world!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>​Go 设计者思想: <strong>一个问题尽量只有一个解决方法</strong></p><ol start="5"><li>一行最长不超过 80 个字符，超过的请使用换行展示，尽量保持格式优雅</li></ol><h2 id="golang-官方编程指南">Golang 官方编程指南</h2><div class='tag-link-1'><a class="tag-Link" target="_blank" href=" https://go.dev/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/go.dev/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Golang 官方网站</div>            <div class="tag-link-sitename"> https://go.dev/</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>Golang 官方标准库 API 文档，<a href="https://golang.org/pkg">https://golang.org/pkg</a> 可以查看 Golang 所有包下的函数和使用</p><h2 id="golang-标准库-api-文档">Golang 标准库 API 文档</h2><ol><li>API （Application Programming Interface,应用程序编程接口）是 Golang 提供的基本编程接口。</li><li>Go 语言提供了大量的标准库，因此 google 公司 也为这些标准库提供了相应的 API 文档，用于告<br>诉开发者如何使用这些标准库，以及标准库包含的方法。</li><li>Golang 中文网 在线标准库文档： <a href="https://studygolang.com/pkgdoc">https://studygolang.com/pkgdoc</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hello-world&quot;&gt;hello world&lt;/h2&gt;
&lt;p&gt;作为每一门语言的入门，那必须是会打印&lt;strong&gt;hello world&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hello.go&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.yuanyuan.blog/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="golang" scheme="https://www.yuanyuan.blog/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang开篇</title>
    <link href="https://www.yuanyuan.blog/posts/67893972.html"/>
    <id>https://www.yuanyuan.blog/posts/67893972.html</id>
    <published>2023-04-30T19:22:32.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是golang">什么是Golang</h2><p>Golang（也称为Go）是一种开源编程语言，由Google开发。它结合了静态编译语言的性能和动态语言的开发效率，适用于构建可靠、高效、并发的软件。</p><p>Golang的设计目标是简单、高效、可靠。它支持并发编程，内置垃圾回收机制，具有强大的标准库和丰富的第三方库支持，同时还具有良好的跨平台支持。Golang的语法简洁明了，易于学习和使用，同时支持面向对象编程和函数式编程。</p><p>Golang被广泛应用于构建Web应用、网络服务、分布式系统、云计算等领域。它已经成为了一种流行的编程语言，并且在不断发展和完善。</p><h2 id="golang-的学习方向">Golang 的学习方向</h2><ol><li><p>区块链研发工程师</p></li><li><p>Go服务器端/游戏软件工程师</p></li><li><p>Golang分布式/云计算软件工程师</p></li></ol><h2 id="golang应用领域">Golang应用领域</h2><ol><li>区块链的应用开发</li><li>后台的服务应用</li><li>云计算/云服务后台应用</li></ol><h2 id="go-语言的诞生">Go 语言的诞生</h2><h3 id="go-语言的核心开发团队-三个大牛">Go 语言的核心开发团队-三个大牛</h3><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230430212145.png" alt="image-20230430212144529"></p><h3 id="google-创造-golang-的原因">Google 创造 Golang 的原因</h3><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230430212324.png" alt="image-20230430212324319"></p><h3 id="golang-的发展历程">Golang 的发展历程</h3><ul><li>2007 年，谷歌工程师 Rob Pike, Ken Thompson 和 Robert Griesemer 开始设计一门全新的语言，这是Go 语言的最初原型。</li><li>2009 年 11 月 10 日，Google 将 Go 语言以开放源代码的方式向全球发布。</li><li>2015 年 8 月 19 日，Go 1.5 版发布，本次更新中移除了”最后残余的 C 代码”</li><li>2017 年 2 月 17 日，Go 语言 Go 1.8 版发布。</li><li>2017 年 8 月 24 日，Go 语言 Go 1.9 版发布。 1.9.2 版本</li><li>2018 年 2 月 16 日，Go 语言 Go 1.10 版发布。</li></ul><h2 id="golang-的语言的特点">Golang 的语言的特点</h2><blockquote><p>简介：</p></blockquote><p>Go 语言保证了既能到达静态编译语言的安全和性能，又达到了动态语言开发维护的高效率，使用一个表达式来形容 Go 语言：Go = C + Python , 说明 Go 语言既有 C 静态语言程序的运行速度，又能达到 Python 动态语言的快速开发。</p><ol><li>C 语言中继承了很多理念，包括表达式语法，控制结构，基础数据类型，调用参数传值，指针等<br>等，也保留了和 C 语言一样的编译执行方式及弱化的指针<br>举一个案例(体验)：</li></ol>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//go 语言的指针的使用特点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testPtr</span><span class="params">(num *<span class="type">int</span>)</span></span> &#123;</span><br><span class="line">*num = <span class="number">20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>引入<em>包的概念</em>，用于组织程序结构，<em>Go 语言的一个文件都要归属于一个包</em>，而不能单独存在。</li></ol><ol start="3"><li><p>垃圾回收机制，内存自动回收，不需开发人员管理</p></li><li><p>天然并发 (重要特点)<br>(1) 从语言层面支持并发，实现简单<br>(2) goroutine，轻量级线程，可实现大并发处理，高效利用多核。<br>(3) 基于 CPS 并发模型(Communicating Sequential Processes )实现</p></li><li><p>吸收了管道通信机制，形成 Go 语言特有的管道 channel 通过管道 channel , 可以实现不同的 goroute之间的相互通信。</p></li><li><p>函数可以返回多个值。举例：</p></li></ol>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//写一个函数，实现同时返回 和，差</span></span><br><span class="line"><span class="comment">//go 函数支持返回多个值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getSumAndSub</span><span class="params">(n1 <span class="type">int</span>, n2 <span class="type">int</span>)</span></span> (<span class="type">int</span>, <span class="type">int</span> ) &#123;</span><br><span class="line">sum := n1 + n2 <span class="comment">//go 语句后面不要带分号.</span></span><br><span class="line">sub := n1 - n2</span><br><span class="line"><span class="keyword">return</span> sum , sub</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>新的创新：比如切片 slice、延时执行 defer</li></ol><h2 id="搭建go开发环境">搭建go开发环境</h2><h3 id="下载-sdk-工具包">下载 SDK 工具包</h3><ol><li>Go 语言的官网为：<a href="https://go.dev/">https://go.dev/</a></li><li>SDK 下载地址：<a href="https://golang.google.cn/dl/">https://golang.google.cn/dl/</a></li><li>选择os对应的 sdk 版本(建议使用stable versions即稳定版)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230503190154.png" alt="image-20230503190154398"></p><h3 id="windows下搭建go开发环境">windows下搭建go开发环境</h3><h4 id="安装">安装</h4><p>这里以<strong>go1.20.4.windows-amd64.zip</strong>为例</p><p>下载完后解压缩后会得到 go 文件夹，其中 <code>/bin</code> 目录包含了 go 源码包编译出的编译器（go）、文档工具（godoc）、格式化工具（gofmt），即是我们要进行配置的目录。</p><h4 id="配置环境变量">配置环境变量</h4><p>我们需要添加两个环境变量：</p><blockquote><p>GOROOT：SDK 的根目录，即解压缩后 go 文件夹所在的路径（例如 D:\GoEnv\go）<br>GOPATH：工作目录，即以后我们的 go 项目的工作路径，可以随意地址一个目录；</p></blockquote><p>同时还需要把 SDK 下的 /bin 目录添加到系统 Path 环境变量下，添加完成后在 cmd 中输入 go version 命令检查是否配置成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; go version</span><br><span class="line">go version go1.20.4 windows/amd64</span><br></pre></td></tr></table></figure><p>同时可以使用 <code>go env</code> 查看我们配置的环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; go <span class="built_in">env</span></span><br><span class="line">...</span><br><span class="line"><span class="built_in">set</span> GOPATH=E:\GoProject</span><br><span class="line"><span class="built_in">set</span> GOROOT=D:\GoEnv\go</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="配置-go-代理">配置 Go 代理</h4><p>通过 go get 命令下载各种依赖时，经常需要访问 github/google 等网站，这些网站访问速度可能会比较慢，所以我们可以进行配置代理，保证快速稳定的下载访问。</p><p>这里推荐 <a href="http://goproxy.io">goproxy.io</a>，它是全球最早的 Go modules 镜像代理服务之一，采用 CDN 加速服务为开发者提供依赖下载， 该服务由一批热爱开源，热爱 Go 语言的年轻人开发维护。</p><p>配置的方式就是在用户变量或系统变量下添加 GOPROXY 环境变量，变量值填写 <a href="https://goproxy.io">https://goproxy.io</a>,direct，添加完成后，可以再次使用 go env 命令查看到该环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; go <span class="built_in">env</span></span><br><span class="line">...</span><br><span class="line"><span class="built_in">set</span> GOPROXY=https://goproxy.io,direct</span><br><span class="line">... </span><br></pre></td></tr></table></figure><h3 id="linux下搭建go开发环境">Linux下搭建go开发环境</h3><p>以<code>go1.20.4.linux-amd64.tar.gz</code>为例</p><h4 id="解压">解压</h4><p>使用命令 <code>tar -xzvf go1.20.4.linux-amd64.tar.gz</code> 解压</p><h4 id="配置">配置</h4><p>打开<code>~/.bashrc</code>或<code>/etc/profile</code>文件，写入如下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GOPATH=$HOME/GOPATH  # $HOME/GOPATH为工作目录，即以后我们的 go 项目的工作路径</span><br><span class="line">export GOROOT=/usr/local/go # SDK 的根目录，即解压缩后 go 文件夹所在的路径</span><br><span class="line">export PATH=$GOPATH/bin:$GOROOT/bin:$PATH</span><br></pre></td></tr></table></figure><p>保存后执行<code>source ~/.bashrc</code>使配置生效</p><h4 id="测试">测试</h4><p>在命令行执行<code>go version</code> 如果能够显示正确的版本号则证明配置成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是golang&quot;&gt;什么是Golang&lt;/h2&gt;
&lt;p&gt;Golang（也称为Go）是一种开源编程语言，由Google开发。它结合了静态编译语言的性能和动态语言的开发效率，适用于构建可靠、高效、并发的软件。&lt;/p&gt;
&lt;p&gt;Golang的设计目标是简单、高效、可靠。</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.yuanyuan.blog/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="golang" scheme="https://www.yuanyuan.blog/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu22.04更新cmake</title>
    <link href="https://www.yuanyuan.blog/posts/170c5cd0.html"/>
    <id>https://www.yuanyuan.blog/posts/170c5cd0.html</id>
    <published>2023-04-05T15:43:17.000Z</published>
    <updated>2024-01-11T17:19:15.600Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查是否安装cmake">检查是否安装<code>cmake</code></h2><p>查看<code>cmake</code>版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cmake --version</span><br></pre></td></tr></table></figure><p>如果输出如下，表示未安装<code>cmake</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: cmake: command not found</span><br></pre></td></tr></table></figure><h2 id="使用apt-get安装cmake">使用apt-get安装<code>cmake</code></h2><p>注意：使用<code>apt-get</code>安装的是低版本的<code>cmake</code>。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install cmake</span><br></pre></td></tr></table></figure><p>查看版本，如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cmake --version</span><br><span class="line">cmake version 3.16.3</span><br></pre></td></tr></table></figure><p>很多时候，低版本的<code>cmake</code>并不能满足我们的需求。</p><p>卸载<code>apt-get</code>安装的<code>cmake</code>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y remove cmake</span><br></pre></td></tr></table></figure><h2 id="源码安装指定版本cmake">源码安装指定版本<code>cmake</code></h2><p>通过源码安装，我们可以安装指定版本的<code>cmake</code>。</p><p><code>cmake</code>官方为我们提供了各个版本的源码包，列表链接为：</p><div class='tag-link-1'><a class="tag-Link" target="_blank" href=" https://cmake.org/files">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/cmake.org/files.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">cmake官网</div>            <div class="tag-link-sitename"> https://cmake.org/files</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230405155802.png" alt="image-20230405154931293"></p><p>访问源码包列表链接，可以选择我们指定的版本下载安装。</p><p>目前最新版本是<code>cmake 3.26.3</code>。</p><h3 id="下载cmake-3-26-3">下载<code>cmake 3.26.3 </code></h3><p>在喜欢的路径下，执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://cmake.org/files/LatestRelease/cmake-3.26.3.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压">解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf cmake-3.26.3.tar.gz</span><br></pre></td></tr></table></figure><p>解压后，会在当前路径下生成一个<code>cmake-3.26.3</code>文件夹。</p><p>进入<code>cmake-3.23.0</code>文件夹中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd cmake-3.23.0</span><br></pre></td></tr></table></figure><h3 id="安装">安装</h3><p><strong>第一步：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./configure</span><br></pre></td></tr></table></figure><p>如果报错<code>Could NOT find OpenSSL</code></p><p>解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install libssl-dev</span><br></pre></td></tr></table></figure><p>然后，重新执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./configure </span><br></pre></td></tr></table></figure><p><strong>第二步：</strong></p><p>执行<code>make</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make -j8 </span><br></pre></td></tr></table></figure><p><strong>第三步：</strong></p><p>执行<code>make install</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>验证是否安装成功：</p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/20230405160206.png" alt="image-20230405160205894"></p><p>如果看到版本号，表示安装成功！</p><h2 id="卸载源码安装的cmake">卸载源码安装的<code>cmake</code></h2><p>注意，<code>sudo apt remove cmake</code> 命令无法卸载源码安装的<code>cmake</code>。</p><p>如需卸载源码安装的<code>cmake</code>，需要进入到安装时执行<code>make install</code>时的路径下， 执行卸载命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;检查是否安装cmake&quot;&gt;检查是否安装&lt;code&gt;cmake&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;查看&lt;code&gt;cmake&lt;/code&gt;版本：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="安装" scheme="https://www.yuanyuan.blog/categories/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="cmake" scheme="https://www.yuanyuan.blog/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>前端框架</title>
    <link href="https://www.yuanyuan.blog/posts/89e03522.html"/>
    <id>https://www.yuanyuan.blog/posts/89e03522.html</id>
    <published>2023-03-31T16:09:20.000Z</published>
    <updated>2024-01-11T17:19:15.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="webpack-构建-vue3项目">webpack 构建 Vue3项目</h1><h3 id="1-初始化项目结构-跟cli-结构保持一致">1.初始化项目结构（跟cli 结构保持一致）</h3><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/202304011622487.png" alt="image-20230401162245300"></p><h3 id="2-安装所需要的依赖包">2.安装所需要的依赖包</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack.config.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-dev-server&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@vue/compiler-sfc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.38&quot;</span><span class="punctuation">,</span> <span class="comment">//解析vue文件</span></span><br><span class="line">        <span class="attr">&quot;clean-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span> <span class="comment">//打包 的时候清空dist</span></span><br><span class="line">        <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.7.1&quot;</span><span class="punctuation">,</span> <span class="comment">//处理css文件</span></span><br><span class="line">        <span class="attr">&quot;friendly-errors-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.7.0&quot;</span><span class="punctuation">,</span> <span class="comment">//美化dev</span></span><br><span class="line">        <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.0&quot;</span><span class="punctuation">,</span> <span class="comment">//html 模板</span></span><br><span class="line">        <span class="attr">&quot;less&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.3&quot;</span><span class="punctuation">,</span>  <span class="comment">//处理less</span></span><br><span class="line">        <span class="attr">&quot;less-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^11.0.0&quot;</span><span class="punctuation">,</span> <span class="comment">//处理less文件</span></span><br><span class="line">        <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.1&quot;</span><span class="punctuation">,</span> <span class="comment">//处理style样式</span></span><br><span class="line">        <span class="attr">&quot;ts-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.3.1&quot;</span><span class="punctuation">,</span> <span class="comment">//处理ts</span></span><br><span class="line">        <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.8.2&quot;</span><span class="punctuation">,</span> <span class="comment">//ts</span></span><br><span class="line">        <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.38&quot;</span><span class="punctuation">,</span> <span class="comment">//vue</span></span><br><span class="line">        <span class="attr">&quot;vue-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^17.0.0&quot;</span><span class="punctuation">,</span> <span class="comment">//解析vue</span></span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.74.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.10.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.10.0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-tsc-init-生成ts-文件-如果没有tsc-安装npm-install-typescript-g">3.tsc --init 生成ts 文件 如果没有tsc 安装npm install typescript -g</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preserve&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;importHelpers&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;moduleResolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipLibCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;esModuleInterop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;allowSyntheticDefaultImports&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sourceMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;src/*&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;dom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;dom.iterable&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;scripthost&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;src/**/*.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;src/**/*.tsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;src/**/*.vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tests/**/*.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tests/**/*.tsx&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;node_modules&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-配置vue-声明文件不然ts-识别不了vue-后缀">4.配置vue 声明文件不然ts 识别不了vue 后缀</h3><p>在<code>src</code>目录下新建<code>env.d.ts</code></p><p><img src="https://cdn.jsdelivr.net/gh/liaojie1314/PicGo@master/images/202304011626379.png" alt="image-20230401162653337"></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置vue 声明文件不然ts 识别不了vue 后缀</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&quot;*.vue&quot;</span> &#123;</span><br><span class="line">    <span class="keyword">import</span> &#123; <span class="title class_">DefineComponent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">component</span>:<span class="title class_">DefineComponent</span>&lt;&#123;&#125;,&#123;&#125;,<span class="built_in">any</span>&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> component</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-编写webpack-config-js">5.编写webpack.config.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Configuration</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> htmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">CleanWebpackPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;clean-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">VueLoaderPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader/dist/index&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FriendlyErrorsWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;friendly-errors-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@type</span> &#123;<span class="type">Configuration</span>&#125; //配置智能提示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/main.ts&#x27;</span>, <span class="comment">//入口文件</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;[hash].js&quot;</span>,</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>) <span class="comment">//出口文件</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>, <span class="comment">//解析vue 模板</span></span><br><span class="line">                <span class="attr">use</span>: <span class="string">&quot;vue-loader&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.less$/</span>, <span class="comment">//解析 less</span></span><br><span class="line">                <span class="attr">use</span>: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>, <span class="string">&quot;less-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="comment">//解析css</span></span><br><span class="line">                <span class="attr">use</span>: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.ts$/</span>,  <span class="comment">//解析ts</span></span><br><span class="line">                <span class="attr">loader</span>: <span class="string">&quot;ts-loader&quot;</span>,</span><br><span class="line">                <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">configFile</span>: path.<span class="title function_">resolve</span>(process.<span class="title function_">cwd</span>(), <span class="string">&#x27;tsconfig.json&#x27;</span>),</span><br><span class="line">                    <span class="attr">appendTsSuffixTo</span>: [<span class="regexp">/\.vue$/</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title function_">htmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&quot;./public/index.html&quot;</span> <span class="comment">//html模板</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CleanWebpackPlugin</span>(), <span class="comment">//打包清空dist</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">VueLoaderPlugin</span>(), <span class="comment">//解析vue</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">FriendlyErrorsWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">compilationSuccessInfo</span>:&#123; <span class="comment">//美化样式</span></span><br><span class="line">                <span class="attr">messages</span>:[<span class="string">&#x27;You application is running here http://localhost:9001&#x27;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&quot;@&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./src&#x27;</span>) <span class="comment">// 别名</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&#x27;.js&#x27;</span>, <span class="string">&#x27;.json&#x27;</span>, <span class="string">&#x27;.vue&#x27;</span>, <span class="string">&#x27;.ts&#x27;</span>, <span class="string">&#x27;.tsx&#x27;</span>] <span class="comment">//识别后缀</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">stats</span>:<span class="string">&quot;errors-only&quot;</span>, <span class="comment">//取消提示</span></span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">proxy</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">9001</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">externals</span>: &#123;</span><br><span class="line">        <span class="attr">vue</span>: <span class="string">&quot;Vue&quot;</span> <span class="comment">//CDN 引入</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = config</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;webpack-构建-vue3项目&quot;&gt;webpack 构建 Vue3项目&lt;/h1&gt;
&lt;h3 id=&quot;1-初始化项目结构-跟cli-结构保持一致&quot;&gt;1.初始化项目结构（跟cli 结构保持一致）&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdeli</summary>
      
    
    
    
    <category term="前端" scheme="https://www.yuanyuan.blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端框架" scheme="https://www.yuanyuan.blog/tags/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>gitignore文件</title>
    <link href="https://www.yuanyuan.blog/posts/843cc845.html"/>
    <id>https://www.yuanyuan.blog/posts/843cc845.html</id>
    <published>2023-03-31T15:52:43.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<p>在本地的代码目录中，有些文件或者目录我们并不想提交到仓库中，比如一些运行日志等文件。这样的话，我们提交代码时，就只能一个一个文件去<code>git add</code>，太麻烦了。</p><p>为了解决这个问题，Git里面有一个<code>.gitignore</code>文件。可以指定Git需要忽略哪些文件。配置好之后，Git就会自动忽略满足配置的文件。这样，我们就可以尽情的使用<code>git add .</code>来添加文件了。</p><h2 id="git-忽略规则优先级">Git 忽略规则优先级</h2><p>在 <code>.gitingore</code> 文件中，每一行指定一个忽略规则，Git 检查忽略规则的时候有多个来源，它的优先级如下（由高到低）：</p><ol><li>从命令行中读取可用的忽略规则</li><li>当前目录定义的规则</li><li>父级目录定义的规则，依次递推</li><li><code>$GIT_DIR/info/exclude</code> 文件中定义的规则</li><li><code>core.excludesfile</code>中定义的全局规则</li></ol><h2 id="git-忽略规则匹配语法">Git 忽略规则匹配语法</h2><p>在 <code>.gitignore</code> 文件中，每一行的忽略规则的语法如下：</p><ul><li>空格不匹配任意文件，可作为分隔符，可用反斜杠转义</li><li>开头的文件标识注释，可以使用反斜杠进行转义</li><li><code>!</code>开头的模式标识否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用<code>!</code>也不会再次被包含。可以使用反斜杠进行转义</li><li><code>/</code>结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件</li><li><code>/</code>开始的模式匹配项目跟目录</li><li>如果一个模式不包含斜杠，则它匹配相对于当前<code>.gitignore</code>文件路径的内容，如果该模式不在<code>.gitignore</code>文件中，则相对于项目根目录</li><li><code>**</code> 匹配多级目录，可在开始，中间，结束</li><li><code>?</code> 通用匹配单个字符</li><li><code>*</code> 通用匹配零个或多个字符</li><li><code>[]</code> 通用匹配单个字符列表</li></ul><h2 id="匹配示例">匹配示例</h2><ul><li><code>bin/</code>: 忽略当前路径下的<code>bin</code>文件夹，该文件夹下的所有内容都会被忽略，不忽略<code>bin</code>文件</li><li><code>/bin</code>: 忽略根目录下的bin文件</li><li><code>/*.c</code>: 忽略 <code>cat.c</code>，不忽略 <code>build/cat.c</code></li><li><code>debug/*.obj</code>: 忽略 <code>debug/io.obj</code>，不忽略 <code>debug/common/io.obj</code> 和 <code>tools/debug/io.obj</code></li><li><code>**/foo</code>: 忽略<code>/foo</code>, <code>a/foo</code>, <code>a/b/foo</code>等</li><li><code>a/**/b</code>: 忽略<code>a/b</code>, <code>a/x/b</code>, <code>a/x/y/b</code>等</li><li><code>!/bin/run.sh</code>: 不忽略 <code>bin</code> 目录下的 <code>run.sh</code> 文件</li><li><code>*.log</code>: 忽略所有 <code>.log</code> 文件</li><li><code>config.php</code>: 忽略当前路径的 <code>config.php</code> 文件</li></ul><h2 id="特殊情况">特殊情况</h2><h3 id="文件已经提交过">文件已经提交过</h3><p>这里面有一些特殊情况需要考虑，比如某文件已经被提交过了，之后再对他做了一个<code>.gitignore</code>的忽略的话。忽略是不会生效的，需要我们手动先将缓存删除。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除本地的缓存</span></span><br><span class="line">git rm -r --cached .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新提交</span></span><br><span class="line">git commit -am &#x27;gitignore&#x27;</span><br></pre></td></tr></table></figure><h3 id="添加一个已经配置忽略的文件">添加一个已经配置忽略的文件</h3><p>再比如，我们忽略了文件夹A，但是现在要往文件夹A中添加代码文件。你会发现你没法把文件夹A中的代码提交。因为文件夹A被忽略了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制添加</span></span><br><span class="line">git add -f 文件A/xxx.js</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">正常提交</span></span><br><span class="line">git commit -am &#x27;xxx&#x27;</span><br></pre></td></tr></table></figure><h2 id="检查文件为什么被忽略">检查文件为什么被忽略</h2><p>由于<code>.gitignore</code>文件经常会配置很多内容，某些文件你并不能很直观的知道为什么被忽略了。所以Git提供了一个检查忽略的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git check-ignore -v 文件夹A/xxx.js</span><br></pre></td></tr></table></figure><h2 id="最后附一个官方示例">最后附一个官方示例</h2><div class='tag-link-1'><a class="tag-Link" target="_blank" href=" https://github.com/github/gitignore">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/github/gitignore.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">官方示例</div>            <div class="tag-link-sitename"> https://github.com/github/gitignore</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在本地的代码目录中，有些文件或者目录我们并不想提交到仓库中，比如一些运行日志等文件。这样的话，我们提交代码时，就只能一个一个文件去&lt;code&gt;git add&lt;/code&gt;，太麻烦了。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，Git里面有一个&lt;code&gt;.gitignore&lt;/cod</summary>
      
    
    
    
    <category term="运维" scheme="https://www.yuanyuan.blog/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="git" scheme="https://www.yuanyuan.blog/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>sass</title>
    <link href="https://www.yuanyuan.blog/posts/dcc57bca.html"/>
    <id>https://www.yuanyuan.blog/posts/dcc57bca.html</id>
    <published>2023-03-30T13:22:21.000Z</published>
    <updated>2024-01-11T17:19:15.600Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>说到css，相信大家都知道，css样式是用来修饰网页页面结构的。对于一名前端来说写好css并不难，但如何写出优雅可复用、易重构的css代码并不容易。</p><p>于是css预处理器便出现在大家的视线里，分别是 <code>stylus</code>、<code>less</code>、<code>sass</code>。它们的出现让编写css更加像JavaScript一样具有严谨性、编程性。</p><p>在此对<code>Stylus</code>、<code>Less</code>就不做多叙述了，如果小伙伴对其他两种感兴趣，可以访问 <a href="https://stylus-lang.com/">Stylus官网</a> 、<a href="https://lesscss.cn/">Less官网</a>了解更多哦。</p><h2 id="sass背景">Sass背景</h2><p>Sass（<code>Syntactically Awesome Style Sheets</code>），套用<a href="https://www.sass.hk/">sass官网</a>的牛逼介绍：“Sass是世界上最成熟、最稳定、最强大的专业级CSS扩展语言！”。是一个相对新的css预编译框架，为前端开发而生。</p><h2 id="为什么使用sass">为什么使用Sass?</h2><p>通过Sass编写css代码，你可以减少冗余的css代码，编写更加语义化的css，它扩展了css的能力，增加变量、嵌套css规则、混合器、继承、函数等新特性。</p><h2 id="sass-vs-scss">.sass vs .scss ?</h2><p>早已Sass出现的时候，是没有Scss的，Sass语法跟原生css不尽相同。使用缩进代替括号，没有分号。有些开发者并不适应这种写法，于是在Sass发布的3.0版本后官方提出修改，将文件后缀名以<code>.sass</code>改成了<code>.scss</code>,语法也更贴切原生css，让开发者可以像原来写css一样愉快的写scss。<code>scss</code>对应<code>css</code>就像<code>typescript</code>是<code>JavaScript</code>的超集一样的关系。</p><h2 id="sass安装">Sass安装</h2><p>关于Sass安装网上有很多详细教程，推荐几篇典型的安装教程文章。<br><a href="https://www.sass.hk/install/">Sass官网安装教程</a></p><h2 id="sass在node-js编译环境的安装">Sass在<code>node.js</code>编译环境的安装</h2><ol><li><p>在 nodejs 的平台下面，我们需要安装<code>node-sass</code>模块，通过这个模块，我们可以将 <code>scss</code> 文件转换成<code>css</code> 文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install node-sass <span class="attr">--save</span></span><br></pre></td></tr></table></figure></li><li><p>安装完成以后，我们新建一个文件，名为<code>index.scss</code>文件</p></li><li><p>使用<code>node-sass</code>的语法来编译<code>index.scss</code>,具体语法如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node-sass --watch src/index.scss dist/index.css</span><br></pre></td></tr></table></figure></li><li><p>如果我们需要监控一个文件夹下面所有的文件，则需要使用如下的语法格式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node-sass  -w -r &lt;源文件夹&gt; -o &lt;目标文件夹&gt;    <span class="comment">//它只会跟踪同名文件，没有则新建</span></span><br><span class="line">-w, <span class="attr">--watch</span>                Watch <span class="selector-tag">a</span> directory or file <span class="comment">//监听</span></span><br><span class="line">-r, <span class="attr">--recursive</span>            Recursively watch directories or files  <span class="comment">//递归地查看目录或文件</span></span><br><span class="line">-o, <span class="attr">--output</span>               Output directory <span class="comment">//输出目录</span></span><br></pre></td></tr></table></figure></li><li><p>为了能够方法的执行我们的<code>node-sass</code>语法，我们一般会把编译命令写在 <code>package.json</code>的配置文件下面，如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sass-demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sass练习&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node-sass --watch ./src/index.scss ./src/index.css&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;luckydong&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;node-sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.9.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="1-sass变量">1、 Sass变量</h2><h3 id="1-1-变量声明与引用">1.1 变量声明与引用</h3><p><code>sass</code>变量声明和<code>css</code>属性声明很像：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$theme-<span class="attribute">color</span>: <span class="number">#fff</span>;</span><br></pre></td></tr></table></figure><p>这意味着变量<code>$theme-color</code>现在的值是<code>#fff</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$theme-<span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  $<span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: $height;</span><br><span class="line">  <span class="attribute">color</span>: $theme-color;</span><br><span class="line">&#125;</span><br><span class="line">//编译后</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这段代码中，<code>$theme-color</code>这个变量定义在规则块外边，所以在这个样式表中都可以像 <code>div</code>规则块那样引用它。</p><h3 id="1-2-默认变量">1.2 默认变量</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$defaultWidth</span>: <span class="number">100px</span>; <span class="comment">//全局变量</span></span><br><span class="line"><span class="variable">$defaultWidth</span>: <span class="number">200px</span> !default;</span><br><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="variable">$height</span>: <span class="number">50px</span>; <span class="comment">//定义变量  局部变量</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$defaultWidth</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$height</span>; <span class="comment">//引用变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$defaultWidth</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在<code>Scss</code>语法里面，变量分为全局变量与局部变量，变量加上<code>!default</code> 以后就是默认变量</p></blockquote><h2 id="2-嵌套-css-规则">2、 嵌套 CSS 规则</h2><p><code>css</code>中重复写选择器是非常繁琐无趣的事。如果要写一大串指向页面中同一块样式时，往往需要多次写同一个<code>id</code>或是同一个<code>class</code>类名:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">article</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">article</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1.4em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">aside</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的<code>css</code>代码使用<code>scss</code>语法编写后就会变得简单明了、结构清晰，如下所示</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">  <span class="selector-tag">article</span> &#123;</span><br><span class="line">    <span class="selector-tag">h1</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span> &#123;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">1.4em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">aside</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-父选择器的标识符">2.1 父选择器的标识符<code>&amp;</code></h3><p>在 scss 中，有时候我们需要在子级当中使用父级选择器，此时我们就需要使用<code>&amp;</code>来选取父级选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的 <code>css</code>代码经过<code>scss</code>换写后，可以简写为如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-子级选择器中的-与">2.2 子级选择器中的&gt; ~与+</h3><ol><li><code>'&gt;'</code>代表是的子级选择器</li><li>空格代码的是后代选择器</li><li><code>'+'</code>代表的是相邻兄弟选择器</li><li><code>‘～’</code>代表兄弟选择器</li></ol><blockquote><p>以上的四种用法与 CSS 的选择器保持一致</p></blockquote><h2 id="3-混合器">3、 混合器</h2><p>有时候我们在写样式的时候会发现，有些地方有样式，其中有一些是相同的，这个时候，我们会把这些样式提取出来，然后再单独导入进去。</p><p>例如：假设我们需要写一个 button，这个 button 的大小与边框都一样，唯独在颜色上一样的时候，我们可以使用混合器做如下处理</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> btn &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid lightgray;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-success</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> btn;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>说明：在上面的代码当中，不难发现，我们使用了<code>@mixin</code> 来定义一个混合器。在下面的样式当中，我们使用了<code>@include</code>导入混合器，这样 .btn-success 的样式就结合了之前定义的样式了。</p></blockquote><h3 id="3-1-混合器的中参数">3.1 混合器的中参数</h3><p><code>SCSS</code>中的混合器有点类似于js中的方法，定义一个混合器就相当于定义了一个方法，而我们定义方法的时候可以定义参数，在调用方法的时候，我们则可以使用这个参数。同理，在 <code>SCSS</code> 当中，定义混合器也可以使用参数，代码如下所示：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> flex-box(<span class="variable">$direction</span>) &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: <span class="variable">$direction</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item1</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> flex-box(row);</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码经过 <code>node-sass</code>编译后，如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item1</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-混合器参数的默认值">3.2 混合器参数的默认值</h3><p>为了在<code>@include</code>混合器时不必传入所有的参数，给参数指定一个默认值，上面的scss 中，如果希望<code>flex</code>布局中默认的主轴是 <code>column</code>，可以定义如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> flex-box(<span class="variable">$direction</span>: column) &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: <span class="variable">$direction</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item1</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> flex-box;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在上面的 SCSS 当中，我们在调用的时候没有传递参数给混合器，而是使用了它的默认值</p></blockquote><h2 id="4-选择器继承">4、 选择器继承</h2><p>使用<code>sass</code>的时候，最后一个减少重复的主要特性就是选择器继承。</p><p>选择器继承指的是一个选择器可以继承另一个选择器定义的所有样式。这个通过<code>@extend</code>语法实现，如下代码:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过选择器继承继承样式</span></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.loading-error</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .error;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的<code>@extend</code>就相当于继承，后面的.error 则是继承的选择器，上面的 <code>scss</code> 经过编译后所呈现的代码如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.error</span>,</span><br><span class="line"><span class="selector-class">.loading-error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.loading-error</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：我们可以看到，继承的选择器，它在这里使用了分组选择器来完了这个功能，这样我们的.loading-error 的样式则单独的区分开。</p></blockquote><p><em>关于<code>@extend</code>有两个要点你应该知道。</em></p><p>跟混合器相比，继承生成的css代码相对更少。因为继承仅仅是重复选择器，而不会重复属性，所以使用继承往往比混合器生成的css体积更小。如果你非常关心你站点的速度，请牢记这一点。</p><p>继承遵从css层叠的规则。当两个不同的css规则应用到同一个html元素上时，并且这两个不同的css规则对同一属性的修饰存在不同的值，css层叠规则会决定应用哪个样式。</p><p>相当直观：通常权重更高的选择器胜出，如果权重相同，定义在后边的规则胜出。</p><h3 id="写在最后">写在最后</h3><blockquote><ol><li>变量</li><li>嵌套 CSS 规则</li><li>混合器</li><li>继承</li></ol></blockquote><p>以上的四种是 Sass 的核心内容，也是最基础内容，通过了解学习后，我们可以快速的编写页面样式，提高开发效率，做到 CSS 代码重复率低，可复用性高。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;说到css，相信大家都知道，css样式是用来修饰网页页面结构的。对于一名前端来说写好css并不难，但如何写出优雅可复用、易重构的css代码并不容易。&lt;/p&gt;
&lt;p&gt;于是css预处理器便出现在大家的视线里，分别是 &lt;code&gt;stylu</summary>
      
    
    
    
    <category term="前端" scheme="https://www.yuanyuan.blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="sass" scheme="https://www.yuanyuan.blog/tags/sass/"/>
    
  </entry>
  
  <entry>
    <title>less</title>
    <link href="https://www.yuanyuan.blog/posts/d3b694df.html"/>
    <id>https://www.yuanyuan.blog/posts/d3b694df.html</id>
    <published>2023-03-30T13:22:12.000Z</published>
    <updated>2024-01-11T17:19:15.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><h3 id="css的短板">CSS的短板</h3><p>作为前端学习者的我们 或多或少都要学些 CSS ，它作为前端开发的三大基石之一，时刻引领着 Web 的发展潮向。 而 CSS 作为一门标记性语言，可能 给初学者第一印象 就是简单易懂，毫无逻辑，不像编程该有的样子。在语法更新时，每当新属性提出，浏览器的兼容又会马上变成绊脚石，可以说 CSS 短板不容忽视。</p><p>问题的诞生往往伴随着技术的兴起， 在 Web 发展的这几年， 为了让 CSS 富有逻辑性，短板不那么严重，涌现出了 一些神奇的预处理语言。 它们让 CSS 彻底变成一门 可以使用 变量 、循环 、继承 、自定义方法等多种特性的标记语言，逻辑性得以大大增强。</p><h3 id="预处理语言的诞生">预处理语言的诞生</h3><p>其中 就我所知的有三门语言：Sass、Less 、Stylus 。</p><ol><li>Sass 诞生于 2007 年，Ruby 编写，其语法功能都十分全面，可以说 它完全把 CSS 变成了一门编程语言。另外 在国内外都很受欢迎，并且它的项目团队很是强大 ，是一款十分优秀的预处理语言。</li><li>Stylus 诞生于 2010 年，来自 Node.js 社区，语法功能也和 Sass 不相伯仲，是一门十分独特的创新型语言。</li><li>Less 诞生于 2009 年，受Sass的影响创建的一个开源项目。 它扩充了 CSS 语言，增加了诸如变量、混合（mixin）、函数等功能，让 CSS 更易维护、方便制作主题、扩充（<em>引用于官网</em>）。</li></ol><h3 id="选择预处理语言">选择预处理语言</h3><p>这是一个十分纠结的问题。</p><ol><li>在网上讨论看来，Sass 与 Stylus 相比于 Less 功能更为丰富，但对于学习成本以及适应时间 ，Less 稍胜一筹，这也是我选择 Less 的原因。</li><li>Less 没有去掉任何 CSS 的功能，而是在现有的语法上，增添了许多额外的功能特性，所以学习 Less 是一件非常舒服的事情。</li></ol><p>如果你之前没有接触过预处理语言，纠结应该学哪一个，不如先看看 下面 Less 的介绍，我相信你会爱上它的。</p><h3 id="使用-less-的前奏">使用 Less 的前奏</h3><p>使用 Less 有两种方式</p><ol><li>在页面中 引入 Less.js</li></ol><ul><li><p>可在<a href="http://lesscss.org/">官网</a>下载</p></li><li><p>或使用CDN</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/less@4.1.3/dist/less.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要注意的是，link 标签一定要在 Less.js 之前引入，并且 link 标签的 rel 属性要设置为stylesheet/less。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet/less&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.less&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;less.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol><li><p>在命令行 使用npm安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g less</span><br></pre></td></tr></table></figure><p>具体使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lessc styles.less &gt; styles.css</span><br></pre></td></tr></table></figure><p>假如还有问题，<a href="http://less.bootcss.com/">官网</a>已经有了明确的步骤。</p><p>如果你也是 Webpack 的使用者，还需要配合 less-loader 进行处理，具体可见我的这篇文章：<a href="https://tomotoes.com/posts/4d6f8cc5/">Webpack飞行手册</a>，里面详细说明了 less 的处理方式。</p><p>如果你在本地环境，可以使用第一种方式，非常简单；但在生产环境中，性能非常重要，最好使用第二种方式。</p></li></ol><h2 id="正文">正文</h2><p>下面我将简介 Less 的功能特性。</p><h3 id="变量">变量</h3><p>我们常常在 CSS 中 看到同一个值重复多次，这样难易于代码维护。 理想状态，应是下面这样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bgColor=<span class="string">&quot;skyblue&quot;</span>;</span><br><span class="line">$(<span class="string">&quot;.post-content&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,bgColor);</span><br><span class="line">$(<span class="string">&quot;#wrap&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,bgColor);</span><br><span class="line">$(<span class="string">&quot;.arctive&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,bgColor);</span><br></pre></td></tr></table></figure><p>只要我们修改 <code>bgColor</code>这一个变量， 整个页面的背景颜色都会随之改变。</p><p>而 Less 中的变量十分强大，可化万物，值得一提的是，其变量是常量 ，所以只能定义一次，不能重复使用。</p><ol><li><p><strong>值变量</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@color:</span> <span class="number">#999</span>;</span><br><span class="line"><span class="variable">@bgColor:</span> skyblue;<span class="comment">//不要添加引号</span></span><br><span class="line"><span class="variable">@width:</span> <span class="number">50%</span>;</span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">@bgColor</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@width</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">background</span>: skyblue;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以 <code>@</code> 开头 定义变量，并且使用时 直接 键入 <code>@</code>名称。</p><p>在平时工作中，我们就可以把 常用的变量 封装到一个文件中，这样利于代码组织维护。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@lightPrimaryColor:</span> <span class="number">#c5cae9</span>;</span><br><span class="line"><span class="variable">@textPrimaryColor:</span> <span class="number">#fff</span>;</span><br><span class="line"><span class="variable">@accentColor:</span> <span class="built_in">rgb</span>(<span class="number">99</span>, <span class="number">137</span>, <span class="number">185</span>);</span><br><span class="line"><span class="variable">@primaryTextColor:</span> <span class="number">#646464</span>;</span><br><span class="line"><span class="variable">@secondaryTextColor:</span> <span class="number">#000</span>;</span><br><span class="line"><span class="variable">@dividerColor:</span> <span class="number">#b6b6b6</span>;</span><br><span class="line"><span class="variable">@borderColor:</span> <span class="number">#dadada</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>选择器变量</strong></p><p>让 选择器 变成 动态</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@mySelector:</span> #wrap;</span><br><span class="line"><span class="variable">@Wrap:</span> wrap;</span><br><span class="line"><span class="variable">@&#123;mySelector&#125;</span>&#123; <span class="comment">//变量名 必须使用大括号包裹</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.@&#123;Wrap&#125;</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#@&#123;Wrap&#125;</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#666</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>属性变量</strong></p><p>可减少代码书写量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@borderStyle:</span> border-style;</span><br><span class="line"><span class="variable">@Soild:</span>solid;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  @&#123;borderStyle&#125;: @<span class="selector-tag">Soild</span>;<span class="comment">//变量名 必须使用大括号包裹</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">border-style</span>:solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>url 变量</strong></p><p>项目结构改变时，修改其变量即可。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@images:</span> <span class="string">&quot;../img&quot;</span>;<span class="comment">//需要加引号</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&quot;@&#123;images&#125;/dog.png&quot;</span>);<span class="comment">//变量名 必须使用大括号包裹</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">&quot;../img/dog.png&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>声明变量</strong></p><p>有点类似于 下面的 混合方法</p><ul><li>结构: @name: { 属性: 值 ;};</li><li>使用：@name();</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@background:</span> &#123;<span class="attribute">background</span>:red;&#125;;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="variable">@background</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">@Rules:</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> red;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">  <span class="variable">@Rules</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: solid <span class="number">1px</span> red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>变量运算</strong></p><p>不得不提的是，Less 的变量运算完全超出我的期望，十分强大。</p><ul><li>加减法时 以第一个数据的单位为基准</li><li>乘除法时 注意单位一定要统一</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@width:</span><span class="number">300px</span>;</span><br><span class="line"><span class="variable">@color:</span><span class="number">#222</span>;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="variable">@width-20</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="variable">@width-20</span>*<span class="number">5</span>;</span><br><span class="line">  <span class="attribute">margin</span>:(<span class="variable">@width-20</span>)*<span class="number">5</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="variable">@color</span>*<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="variable">@color</span> + <span class="number">#111</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">280px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">1400px</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>变量作用域</strong></p><p>一句话理解就是：<strong>就近原则</strong>，不要跟我提闭包。</p><p><em>借助官网的Demo</em></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@var:</span> <span class="variable">@a</span>;</span><br><span class="line"><span class="variable">@a:</span> <span class="number">100%</span>;</span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@var</span>;</span><br><span class="line">  <span class="variable">@a:</span> <span class="number">9%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">9%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>用变量去定义变量</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@fnord:</span>  <span class="string">&quot;I am fnord.&quot;</span>;</span><br><span class="line"><span class="variable">@var:</span>    <span class="string">&quot;fnord&quot;</span>;</span><br><span class="line"><span class="selector-id">#wrap</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="variable">@@var</span>; <span class="comment">//将@var替换为其值 content:@fnord;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;I am fnord.&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="嵌套">嵌套</h3><ol><li><p><strong>&amp; 的妙用</strong></p><p>&amp; ：代表的上一层选择器的名字，此例便是<code>header</code>。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#header</span>&#123;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;Less is more!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.title</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>:bold;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-tag">_content</span>&#123;<span class="comment">//理解方式：直接把 &amp; 替换成 #header</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#header</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">&quot;Less is more!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.title</span>&#123; <span class="comment">//嵌套了</span></span><br><span class="line">  <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header_content</span>&#123;<span class="comment">//没有嵌套！</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>媒体查询</strong></p><p>在以往的工作中，我们使用 媒体查询，都要把一个元素 分开写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>)&#123;</span><br><span class="line">  <span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Less 提供了一个十分便捷的方式</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="comment">//something...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">@media</span> screen&#123;</span><br><span class="line">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>)&#123;</span><br><span class="line">          <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@media</span> tv &#123;</span><br><span class="line">      <span class="attribute">width</span>:<span class="number">2000px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">maxwidth</span>:<span class="number">768px</span>)&#123;</span><br><span class="line">  <span class="selector-id">#main</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>:<span class="number">100px</span>; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> tv&#123;</span><br><span class="line">  <span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">2000px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>唯一的缺点就是 每一个元素都会编译出自己 <code>@media</code> 声明，并不会合并。</p></li><li><p><strong>实战技巧</strong></p><p>可以借助 Less 在元素中，去定义自己的私有样式。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="comment">// something..</span></span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-class">.show</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.show</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> main = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;main&quot;</span>);</span><br><span class="line">main.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;show&quot;</span>);</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span><span class="selector-class">.show</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.show</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>:none; <span class="comment">//会被覆盖。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="混合方法">混合方法</h3><ol><li><p><strong>无参数方法</strong></p><p>方法犹如 声明的集合，使用时 直接键入名称即可。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.card</span> &#123; <span class="comment">// 等价于 .card()</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f6f6f6</span>;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">151</span>, <span class="number">151</span>, <span class="number">151</span>, .<span class="number">58</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">151</span>, <span class="number">151</span>, <span class="number">151</span>, .<span class="number">58</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="selector-class">.card</span>;<span class="comment">//等价于.card();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f6f6f6</span>;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">151</span>, <span class="number">151</span>, <span class="number">151</span>, .<span class="number">58</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">151</span>, <span class="number">151</span>, <span class="number">151</span>, .<span class="number">58</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>.card</code> 与 <code>.card()</code> 是等价的。 个人建议，为了避免 代码混淆，应写成 :</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.card</span>()&#123;</span><br><span class="line">  <span class="comment">//something...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="selector-class">.card</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要点：</p><ul><li><code>.</code> 与 <code>#</code> 皆可作为 方法前缀。</li><li>方法后写不写 <code>()</code> 看个人习惯。</li></ul></li><li><p><strong>默认参数方法</strong></p><ul><li>Less 可以使用默认参数，如果 没有传参数，那么将使用默认参数。</li><li><code>@arguments</code> 犹如 JS 中的 <code>arguments</code> 指代的是 全部参数。</li><li>传的参数中 必须带着单位。</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.border</span>(<span class="variable">@a</span>:<span class="number">10px</span>,<span class="variable">@b</span>:<span class="number">50px</span>,<span class="variable">@c</span>:<span class="number">30px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="variable">@color</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>;<span class="comment">//指代的是 全部参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">0px</span>,<span class="number">5px</span>,<span class="number">30px</span>,red);<span class="comment">//必须带着单位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">0px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span>&#123;</span><br><span class="line">  <span class="selector-class">.border</span>;<span class="comment">//等价于 .border()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> red;</span><br><span class="line">    <span class="attribute">box-shadow</span>:<span class="number">0px</span>,<span class="number">5px</span>,<span class="number">30px</span>,red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">50px</span> <span class="number">30px</span> <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">50px</span> <span class="number">30px</span> <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>方法的匹配模式</strong></p><p>与 面向对象中的多态 很相似</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.triangle</span>(top,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent  transparent <span class="variable">@color</span> transparent ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.triangle</span>(right,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent <span class="variable">@color</span> transparent  transparent ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span>(bottom,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="variable">@color</span> transparent  transparent  transparent ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.triangle</span>(left,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent  transparent  transparent <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.triangle</span>(<span class="variable">@_</span>,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="variable">@width</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.triangle</span>(left, <span class="number">50px</span>, <span class="number">#999</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">border-color</span>:transparent  transparent  transparent <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要点</p><ul><li>第一个参数 <code>left</code> 要会找到方法中匹配程度最高的，如果匹配程度相同，将全部选择，并存在着样式覆盖替换。</li><li>如果匹配的参数 是变量，则将会匹配，如 <code>@_</code> 。</li></ul></li><li><p><strong>方法的命名空间</strong></p><p>让方法更加规范</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#card</span>()&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#723232</span>;</span><br><span class="line">    <span class="selector-class">.d</span>(<span class="variable">@w</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="selector-id">#a</span>(<span class="variable">@h</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">            <span class="attribute">height</span>: <span class="variable">@h</span>;<span class="comment">//可以使用上一层传进来的方法</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="selector-id">#card</span> &gt; <span class="selector-class">.d</span> &gt; <span class="selector-id">#a</span>(<span class="number">100px</span>); <span class="comment">// 父元素不能加 括号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-id">#card</span> <span class="selector-class">.d</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">    <span class="comment">//不得单独使用命名空间的方法</span></span><br><span class="line">    <span class="comment">//.d() 如果前面没有引入命名空间 #card ，将会报错</span></span><br><span class="line">    </span><br><span class="line">    <span class="selector-id">#card</span>; <span class="comment">// 等价于 #card();</span></span><br><span class="line">    <span class="selector-class">.d</span>(<span class="number">20px</span>); <span class="comment">//必须先引入 #card</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要点</p><ul><li>在 CSS 中<code>&gt;</code> 选择器，选择的是 儿子元素，就是 必须与父元素 有直接血源的元素。</li><li>在引入命令空间时，如使用 <code>&gt;</code> 选择器，父元素不能加 括号。</li><li>不得单独使用命名空间的方法 必须先引入命名空间，才能使用 其中方法。</li><li>子方法 可以使用上一层传进来的方法</li></ul></li><li><p><strong>方法的条件筛选</strong></p><p>Less 没有 if else，可是它有 <code>when</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#card</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// and 运算符 ，相当于 与运算 &amp;&amp;，必须条件全部符合才会执行</span></span><br><span class="line">    <span class="selector-class">.border</span>(<span class="variable">@width</span>,<span class="variable">@color</span>,<span class="variable">@style</span>) <span class="keyword">when</span> (<span class="variable">@width</span>&gt;<span class="number">100px</span>) <span class="keyword">and</span>(<span class="variable">@color</span>=<span class="number">#999</span>)&#123;</span><br><span class="line">        <span class="attribute">border</span>:<span class="variable">@style</span> <span class="variable">@color</span> <span class="variable">@width</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// not 运算符，相当于 非运算 !，条件为 不符合才会执行</span></span><br><span class="line">    <span class="selector-class">.background</span>(<span class="variable">@color</span>) <span class="keyword">when</span> <span class="keyword">not</span> (<span class="variable">@color</span>&gt;=<span class="number">#222</span>)&#123;</span><br><span class="line">        <span class="attribute">background</span>:<span class="variable">@color</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// , 逗号分隔符：相当于 或运算 ||，只要有一个符合条件就会执行</span></span><br><span class="line">    <span class="selector-class">.font</span>(<span class="variable">@size</span>:<span class="number">20px</span>) <span class="keyword">when</span> (<span class="variable">@size</span>&gt;<span class="number">50px</span>) , (<span class="variable">@size</span>&lt;<span class="number">100px</span>)&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="variable">@size</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-id">#card</span>&gt;<span class="selector-class">.border</span>(<span class="number">200px</span>,<span class="number">#999</span>,solid);</span><br><span class="line">    <span class="selector-id">#card</span> <span class="selector-class">.background</span>(<span class="number">#111</span>);</span><br><span class="line">    <span class="selector-id">#card</span> &gt; <span class="selector-class">.font</span>(<span class="number">40px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>:solid <span class="number">#999</span> <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#111</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要点</p><ul><li>比较运算有： &gt; &gt;= = =&lt; &lt;。</li><li>= 代表的是等于</li><li>除去关键字 true 以外的值都被视为 false：</li></ul></li><li><p><strong>数量不定的参数</strong></p><p>如果你希望你的方法接受数量不定的参数，你可以使用… ，犹如 ES6 的扩展运算符。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.boxShadow</span>(...)&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.textShadow</span>(<span class="variable">@a</span>,...)&#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.boxShadow</span>(<span class="number">1px</span>,<span class="number">4px</span>,<span class="number">30px</span>,red);</span><br><span class="line">    <span class="selector-class">.textShadow</span>(<span class="number">1px</span>,<span class="number">4px</span>,<span class="number">30px</span>,red);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">4px</span> <span class="number">30px</span> red;</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">4px</span> <span class="number">30px</span> red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>方法使用important！</strong></p><p>使用方法 非常简单，在方法名后 加上关键字即可。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.border</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>() !important;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> red <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>循环方法</strong></p><p>Less 并没有提供 for 循环功能，但这也难不倒 聪明的程序员，使用递归去实现。 下面是官网中的一个 Demo，模拟了生成栅格系统。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.generate-columns</span>(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.generate-columns</span>(<span class="variable">@n</span>, <span class="variable">@i</span>: <span class="number">1</span>) <span class="keyword">when</span> (<span class="variable">@i</span> =&lt; <span class="variable">@n</span>) &#123;</span><br><span class="line">  <span class="selector-class">.column-</span><span class="variable">@&#123;i&#125;</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: (<span class="variable">@i</span> * <span class="number">100%</span> / <span class="variable">@n</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.generate-columns</span>(<span class="variable">@n</span>, (<span class="variable">@i</span> + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-class">.column-1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>属性拼接方法</strong></p><p><code>+_</code> 代表的是 空格；<code>+</code> 代表的是 逗号。</p><ul><li>逗号</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.boxShadow</span>() &#123;</span><br><span class="line">    <span class="selector-tag">box-shadow</span>+: <span class="selector-tag">inset</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="selector-id">#555</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="selector-class">.boxShadow</span>();</span><br><span class="line">  <span class="selector-tag">box-shadow</span>+: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="selector-tag">black</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#555</span>, <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>空格</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.Animation</span>() &#123;</span><br><span class="line">  <span class="selector-tag">transform</span>+<span class="selector-tag">_</span>: <span class="selector-tag">scale</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="selector-class">.Animation</span>();</span><br><span class="line">  <span class="selector-tag">transform</span>+<span class="selector-tag">_</span>: <span class="selector-tag">rotate</span>(<span class="number">15deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>) <span class="built_in">rotate</span>(<span class="number">15deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>实战技巧</strong></p><p>下面是官网中的一个非常赞的 Demo</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.average</span>(<span class="variable">@x</span>, <span class="variable">@y</span>) &#123;</span><br><span class="line">  <span class="variable">@average:</span> ((<span class="variable">@x</span> + <span class="variable">@y</span>) / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="selector-class">.average</span>(<span class="number">16px</span>, <span class="number">50px</span>); <span class="comment">// 调用 方法</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">@average</span>;    <span class="comment">// 使用返回值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">33px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>可以说 Less 是一门优雅编程语言。</p><h3 id="继承">继承</h3><p>extend 是 Less 的一个伪类。它可继承 所匹配声明中的全部样式。</p><ol><li><p><strong>extend 关键字的使用</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.animation</span>&#123;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-out;</span><br><span class="line">    <span class="selector-class">.hide</span>&#123;</span><br><span class="line">      <span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.animation);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.animation .hide);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-class">.animation</span>,<span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.animation</span> <span class="selector-class">.hide</span> , <span class="selector-id">#con</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>all 全局搜索替换</strong></p><p>使用选择器匹配到的 全部声明。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>:<span class="selector-tag">extend</span>(#main all) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>,<span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span><span class="selector-pseudo">:after</span>, <span class="selector-id">#wrap</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>减少代码的重复性</strong></p><p>从表面 看来，extend 与 方法 最大的差别，就是 extend 是同个选择器共用同一个声明，而 方法 是使用自己的声明，这无疑 增加了代码的重复性。</p><p>方法示例 与上面的 extend 进行对比：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.Method</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>:<span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="selector-class">.Method</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="selector-class">.Method</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>要点</strong></p><p><em>翻译官网</em></p><ul><li>选择器和扩展之间 是允许有空格的：pre:hover :extend(div pre).</li><li>可以有多个扩展: pre:hover:extend(div pre):extend(.bucket tr) - 注意这与 pre:hover:extend(div pre, .bucket tr)一样。</li><li>这是不可以的，扩展必须在最后 : pre:hover:extend(div pre).nth-child(odd)。</li><li>如果一个规则集包含多个选择器，所有选择器都可以使用extend关键字。</li></ul><h3 id="导入">导入</h3><ol><li>导入 less 文件 可省略后缀</li></ol><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">import</span> &quot;<span class="selector-tag">main</span>&quot;; </span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line"><span class="selector-tag">import</span> &quot;<span class="selector-tag">main</span><span class="selector-class">.less</span>&quot;;</span><br></pre></td></tr></table></figure><ol><li><code>@import</code> 的位置可随意放置</li></ol><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;style&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>reference</strong></p><p>Less 中 最强大的特性 使用 引入的 Less 文件，但不会 编译它。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="keyword">@import</span> (reference) <span class="string">&quot;bootstrap.less&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-id">#wrap</span>:<span class="selector-tag">extend</span>(.navbar all)&#123;&#125;</span><br></pre></td></tr></table></figure><p>翻译官网：</p><blockquote><p>使用@import (reference)导入外部文件，但不会添加 把导入的文件 编译到最终输出中，只引用。</p></blockquote></li><li><p><strong>once</strong></p><blockquote><p>@import语句的默认行为。这表明相同的文件只会被导入一次，而随后的导入文件的重复代码都不会解析。</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> (once) <span class="string">&quot;foo.less&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> (once) <span class="string">&quot;foo.less&quot;</span>; <span class="comment">// this statement will be ignored</span></span><br></pre></td></tr></table></figure></li><li><p><strong>multiple</strong></p><blockquote><p>使用@import (multiple)允许导入多个同名文件。</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// file: foo.less</span></span><br><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// file: main.less</span></span><br><span class="line"><span class="keyword">@import</span> (multiple) <span class="string">&quot;foo.less&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> (multiple) <span class="string">&quot;foo.less&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="函数">函数</h3><ol><li><p><strong>判断类型</strong></p><ul><li>isnumber</li></ul><blockquote><p>判断给定的值 是否 是一个数字。</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">#ff0</span>);     <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(blue);     <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="string">&quot;string&quot;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">1234</span>);     <span class="comment">// true</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">56px</span>);     <span class="comment">// true</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">7.8%</span>);     <span class="comment">// true</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(keyword);  <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(url(<span class="string">...</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>iscolor</li></ul><blockquote><p>判断给定的值 是否 是一个颜色。</p></blockquote><ul><li>isurl</li></ul><blockquote><p>判断给定的值 是否 是一个 url 。</p></blockquote></li><li><p><strong>颜色操作</strong></p><ul><li>saturate</li></ul><blockquote><p>增加一定数值的颜色饱和度。</p></blockquote><ul><li>lighten</li></ul><blockquote><p>增加一定数值的颜色亮度。</p></blockquote><ul><li>darken</li></ul><blockquote><p>降低一定数值的颜色亮度。</p></blockquote><ul><li>fade</li></ul><blockquote><p>给颜色设定一定数值的透明度。</p></blockquote><ul><li>mix</li></ul><blockquote><p>根据比例混合两种颜色。</p></blockquote></li><li><p><strong>数学函数</strong></p><ul><li>ceil</li></ul><blockquote><p>向上取整。</p></blockquote><ul><li>floor</li></ul><blockquote><p>向下取整。</p></blockquote><ul><li>percentage</li></ul><blockquote><p>将浮点数转换为百分比字符串。</p></blockquote><ul><li>round</li></ul><blockquote><p>四舍五入。</p></blockquote><ul><li>sqrt</li></ul><blockquote><p>计算一个数的平方根。</p></blockquote><ul><li>abs</li></ul><blockquote><p>计算数字的绝对值，原样保持单位。</p></blockquote><ul><li>pow</li></ul><blockquote><p>计算一个数的乘方。</p></blockquote></li></ol><p>由于 文章 篇幅有限，所以 只能介绍一些 使用效率高的函数。</p><p>如果你想了解更多，可以去官网的<a href="http://lesscss.cn/functions/">函数链接</a></p><h3 id="其他">其他</h3><ol><li><p><strong>注释</strong></p><ul><li>/* */ CSS原生注释，会被编译在 CSS 文件中。</li><li>/  / Less提供的一种注释，不会被编译在 CSS 文件中。</li></ul></li><li><p><strong>避免编译</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="string">~&#x27;calc(300px-30px)&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="built_in">calc</span>(<span class="number">300px</span>-<span class="number">30px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构： <code>~' 值 '</code></p></li><li><p><strong>变量拼串</strong></p><p>在平时工作中，这种需求 太常见了。 在下面例子中， 实现了不同的 transtion-delay、animation、@keyframes</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.judge</span>(<span class="variable">@i</span>) <span class="keyword">when</span>(<span class="variable">@i</span>=<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="variable">@size:</span><span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.judge</span>(<span class="variable">@i</span>) <span class="keyword">when</span>(<span class="variable">@i</span>&gt;<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="variable">@size:</span><span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.loopAnimation</span>(<span class="variable">@i</span>) <span class="keyword">when</span> (<span class="variable">@i</span>&lt;<span class="number">16</span>) &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.circle</span><span class="selector-pseudo">:nth-child</span>(<span class="variable">@&#123;i&#125;</span>)&#123;</span><br><span class="line">      <span class="selector-class">.judeg</span>(<span class="variable">@i</span>);</span><br><span class="line">      <span class="attribute">border-radius</span>:<span class="variable">@size</span> <span class="variable">@size</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">animation</span>: <span class="string">~&quot;circle-@&#123;i&#125;&quot;</span> <span class="variable">@duration</span> infinite <span class="variable">@ease</span>;</span><br><span class="line">      <span class="attribute">transition-delay</span>:<span class="string">~&quot;@&#123;i&#125;ms&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@keyframes</span> <span class="string">~&quot;circle-@&#123;i&#125;&quot;</span> &#123;</span><br><span class="line">      <span class="comment">// do something...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.loopAnimation</span>(<span class="variable">@i</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构： <code>~&quot;字符@&#123;变量&#125;字符&quot;</code>;</p></li><li><p><strong>使用 JS</strong></p><p>因为 Less 是由 JS 编写，所以 Less 有一得天独厚的特性：代码中使用 Javascript 。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@content:</span><span class="built_in">`&quot;aaa&quot;.toUpperCase()`</span>;</span><br><span class="line"><span class="selector-id">#randomColor</span>&#123;</span><br><span class="line">  <span class="variable">@randomColor:</span> <span class="string">~&quot;rgb(`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="string">~&quot;`Math.round(Math.random() * 100)`px&quot;</span>;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">      <span class="attribute">content</span>:<span class="variable">@content</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">height</span>: <span class="string">~&quot;`window.innerHeight`px&quot;</span>;</span><br><span class="line">  alert:~&quot;`alert(1)`&quot;;</span><br><span class="line">  <span class="selector-id">#randomColor</span>();</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@randomColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 弹出 1</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: 随机值（<span class="number">0</span>~<span class="number">100</span>）px;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">743px</span>;<span class="comment">//由电脑而异</span></span><br><span class="line">  <span class="attribute">background</span>: 随机颜色;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">&quot;AAA&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;h3 id=&quot;css的短板&quot;&gt;CSS的短板&lt;/h3&gt;
&lt;p&gt;作为前端学习者的我们 或多或少都要学些 CSS ，它作为前端开发的三大基石之一，时刻引领着 Web 的发展潮向。 而 CSS 作为一门标记性语言，可能 给初学者第一印象 就是简单</summary>
      
    
    
    
    <category term="前端" scheme="https://www.yuanyuan.blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="less" scheme="https://www.yuanyuan.blog/tags/less/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB Realm</title>
    <link href="https://www.yuanyuan.blog/posts/99ca06de.html"/>
    <id>https://www.yuanyuan.blog/posts/99ca06de.html</id>
    <published>2023-03-11T16:09:50.000Z</published>
    <updated>2024-01-11T17:19:15.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用realm">使用Realm</h2><div class='tag-link-1'><a class="tag-Link" target="_blank" href=" https://www.mongodb.com/docs/realm/sdk/kotlin/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.mongodb.com/docs/realm/sdk/kotlin/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Realm官方文档</div>            <div class="tag-link-sitename"> https://www.mongodb.com/docs/realm/sdk/kotlin/</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="添加依赖">添加依赖</h3><p>在build.gradle(app)文件中添加</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">...</span><br><span class="line">    id <span class="string">&#x27;io.realm.kotlin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">...</span><br><span class="line">    <span class="comment">//MongoDB Realm</span></span><br><span class="line">    implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;io.realm.kotlin:library-base:1.6.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在build.gradle(项目)文件中添加</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    ...</span><br><span class="line">    id <span class="string">&#x27;io.realm.kotlin&#x27;</span> version <span class="string">&#x27;1.6.1&#x27;</span> apply <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义object-model">定义Object Model</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.realm.kotlin.types.ObjectId</span><br><span class="line"><span class="keyword">import</span> io.realm.kotlin.types.RealmObject</span><br><span class="line"><span class="keyword">import</span> io.realm.kotlin.types.annotations.PrimaryKey</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Item</span>() : RealmObject &#123;</span><br><span class="line">    <span class="meta">@PrimaryKey</span></span><br><span class="line">    <span class="keyword">var</span> _id: ObjectId = ObjectId.create()</span><br><span class="line">    <span class="keyword">var</span> isComplete: <span class="built_in">Boolean</span> = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">var</span> summary: String = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">var</span> owner_id: String = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span>(ownerId: String = <span class="string">&quot;&quot;</span>) : <span class="keyword">this</span>() &#123;</span><br><span class="line">        owner_id = ownerId</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建realm">创建Realm</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> config = RealmConfiguration.create(schema = setOf(Item::<span class="keyword">class</span>))</span><br><span class="line"><span class="keyword">val</span> realm: Realm = Realm.<span class="keyword">open</span>(config)</span><br></pre></td></tr></table></figure><h3 id="create-read-update-and-delete-objects">Create, Read, Update, and Delete Objects</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//To create a new Item, instantiate an instance of the Item class and add it to the realm in a write transaction block:</span></span><br><span class="line">realm.writeBlocking &#123;</span><br><span class="line">    copyToRealm(Item().apply &#123;</span><br><span class="line">        summary = <span class="string">&quot;Do the laundry&quot;</span></span><br><span class="line">        isComplete = <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//query</span></span><br><span class="line"><span class="comment">// all items in the realm</span></span><br><span class="line"><span class="keyword">val</span> items: RealmResults&lt;Item&gt; = realm.query&lt;Item&gt;().find()</span><br><span class="line"><span class="comment">//filter</span></span><br><span class="line"><span class="comment">// items in the realm whose name begins with the letter &#x27;D&#x27;</span></span><br><span class="line"><span class="keyword">val</span> itemsThatBeginWIthD: RealmResults&lt;Item&gt; =</span><br><span class="line">    realm.query&lt;Item&gt;(<span class="string">&quot;summary BEGINSWITH $0&quot;</span>, <span class="string">&quot;D&quot;</span>)</span><br><span class="line">        .find()</span><br><span class="line"><span class="comment">//  todo items that have not been completed yet</span></span><br><span class="line"><span class="keyword">val</span> incompleteItems: RealmResults&lt;Item&gt; =</span><br><span class="line">    realm.query&lt;Item&gt;(<span class="string">&quot;isComplete == false&quot;</span>)</span><br><span class="line">        .find()</span><br><span class="line"></span><br><span class="line"><span class="comment">//To modify a Todo item, update its properties in a write transaction block:</span></span><br><span class="line"><span class="comment">// change the first item with open status to complete to show that the todo item has been done</span></span><br><span class="line">realm.writeBlocking &#123;</span><br><span class="line">    findLatest(incompleteItems[<span class="number">0</span>])?.isComplete = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//delete a Todo item by calling mutableRealm.delete() in a write transaction block:</span></span><br><span class="line"><span class="comment">// delete the first item in the realm</span></span><br><span class="line">realm.writeBlocking &#123;</span><br><span class="line">    <span class="keyword">val</span> writeTransactionItems = query&lt;Item&gt;().find()</span><br><span class="line">    delete(writeTransactionItems.first())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="watch-for-changes">Watch for Changes</h3><p>下面这个例子监听所有Item objects的变化</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flow.collect() is blocking -- run it in a background context</span></span><br><span class="line"><span class="keyword">val</span> job = CoroutineScope(Dispatchers.Default).launch &#123;</span><br><span class="line">    <span class="comment">// create a Flow from the Item collection, then add a listener to the Flow</span></span><br><span class="line">    <span class="keyword">val</span> itemsFlow = items.asFlow()</span><br><span class="line">    itemsFlow.collect &#123; changes: ResultsChange&lt;Item&gt; -&gt;</span><br><span class="line">        <span class="keyword">when</span> (changes) &#123;</span><br><span class="line">            <span class="comment">// UpdatedResults means this change represents an update/insert/delete operation</span></span><br><span class="line">            <span class="keyword">is</span> UpdatedResults -&gt; &#123;</span><br><span class="line">                changes.insertions <span class="comment">// indexes of inserted objects</span></span><br><span class="line">                changes.insertionRanges <span class="comment">// ranges of inserted objects</span></span><br><span class="line">                changes.changes <span class="comment">// indexes of modified objects</span></span><br><span class="line">                changes.changeRanges <span class="comment">// ranges of modified objects</span></span><br><span class="line">                changes.deletions <span class="comment">// indexes of deleted objects</span></span><br><span class="line">                changes.deletionRanges <span class="comment">// ranges of deleted objects</span></span><br><span class="line">                changes.list <span class="comment">// the full collection of objects</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line">                <span class="comment">// types other than UpdatedResults are not changes -- ignore them</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们完成观察后，记得取消job以关闭携程</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">job.cancel() <span class="comment">// cancel the coroutine containing the listener</span></span><br></pre></td></tr></table></figure><h3 id="关闭realm">关闭Realm</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">realm.close()</span><br></pre></td></tr></table></figure><h3 id="查看数据库文件软件">查看数据库文件软件</h3><div class='tag-link-1'><a class="tag-Link" target="_blank" href=" https://www.mongodb.com/docs/realm/studio/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.mongodb.com/docs/realm/studio/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Realm Studio</div>            <div class="tag-link-sitename"> https://www.mongodb.com/docs/realm/studio/</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="案例代码地址">案例代码地址</h3><div class='tag-link-1'><a class="tag-Link" target="_blank" href=" https://github.com/liaojie1314/MongoDBRealmTest">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/liaojie1314/MongoDBRealmTest.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">github代码地址</div>            <div class="tag-link-sitename"> https://github.com/liaojie1314/MongoDBRealmTest</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="room-vs-mongodb-realm">Room VS MongoDB Realm</h2><h3 id="room">Room</h3><p>Room是一个开源数据库，由谷歌专门为Android应用程序开发，它被设计成一个轻量级的高效且易于使用的传统SQLite数据库,它使用对象关系映射的概念(ORM)映射Java或co-objects到Room数据库表。</p><p>优点</p><ul><li>Integration with the AAC(与Android架构组件的集成)</li><li>Strong typing(强大键入功能,有助于防止编译时的错误)</li><li>Easy to use</li><li>Good performance</li></ul><p>缺点</p><ul><li>Security</li><li>Cross-platform</li></ul><h3 id="mongodb-realm">MongoDB Realm</h3><p><a href="https://www.mongodb.com/realm/mobile/database">Realm</a> 是一个专门为移动端设计的数据库。主要特点是性能好，易使用。在移动端 Realm 颇有一些人气，在轻量的场景下使用还是挺适合的。随着 App 的发展，越来越多的本地数据需要和服务器进行同步。如果团队自己开发，需要制定服务器端数据库的格式（和移动端数据库不一样）、服务器端的存储、需要写一个和服务器进行数据同步的程序。对于小团队而言，为了实现这个需求可是不小的工作量。如果 Realm 也提供一个在云上数据库，再提供一个同步的程序。那么数据同步的需求对于中小规模开发者就非常变得非常轻松了。于是 Realm 推出了 Realm Platform，也叫 Realm Cloud。Realm platform 的收费也是按照容量来算钱。</p><p>MongoDB 是一个流行的 NoSQL 数据库，主要是在服务器端使用。后来推出了基于云端的 MongoDB Atlas。随着移动互联网的发展，MongoDB 就想着开发一个在移动端的服务，可以把数据方便的同步到 MongoDB Atlas 上。MongoDB 当时发布了一个 iOS 端的 beta SDK。</p><p>优点</p><ul><li>Cross-platform</li><li>Serverless database</li><li>Device Sync</li><li>Query language</li><li>Security</li></ul><p>缺点</p><ul><li>Learning curve</li><li>Pricing</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用realm&quot;&gt;使用Realm&lt;/h2&gt;
&lt;div class=&#39;tag-link-1&#39;&gt;&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot; href=&quot; https://www.mongodb.com/docs/realm/sdk/kotl</summary>
      
    
    
    
    <category term="编程进阶" scheme="https://www.yuanyuan.blog/categories/%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="Android" scheme="https://www.yuanyuan.blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>小型录音机</title>
    <link href="https://www.yuanyuan.blog/posts/b4b7793c.html"/>
    <id>https://www.yuanyuan.blog/posts/b4b7793c.html</id>
    <published>2023-03-01T19:46:07.000Z</published>
    <updated>2024-01-11T17:19:15.592Z</updated>
    
    <content type="html"><![CDATA[<h3 id="record相关">record相关</h3><h4 id="audiorecorder-kt">AudioRecorder.kt</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">AudioRecorder</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">start</span><span class="params">(outputFile: <span class="type">File</span>)</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">stop</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="androidaudiorecorder-kt">AndroidAudioRecorder.kt</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.media.MediaRecorder</span><br><span class="line"><span class="keyword">import</span> android.os.Build</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore.Audio.Media</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AndroidAudioRecorder</span>(</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> context: Context</span><br><span class="line">): AudioRecorder &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> recorder: MediaRecorder? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">createRecorder</span><span class="params">()</span></span>: MediaRecorder &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.S) &#123;</span><br><span class="line">            MediaRecorder(context)</span><br><span class="line">        &#125; <span class="keyword">else</span> MediaRecorder()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">start</span><span class="params">(outputFile: <span class="type">File</span>)</span></span> &#123;</span><br><span class="line">        createRecorder().apply &#123;</span><br><span class="line">            setAudioSource(MediaRecorder.AudioSource.MIC)</span><br><span class="line">            setOutputFormat(MediaRecorder.OutputFormat.MPEG_4)</span><br><span class="line">            setAudioEncoder(MediaRecorder.AudioEncoder.AAC)</span><br><span class="line">            setOutputFile(FileOutputStream(outputFile).fd)</span><br><span class="line"></span><br><span class="line">            prepare()</span><br><span class="line">            start()</span><br><span class="line"></span><br><span class="line">            recorder = <span class="keyword">this</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">stop</span><span class="params">()</span></span> &#123;</span><br><span class="line">        recorder?.stop()</span><br><span class="line">        recorder?.reset()</span><br><span class="line">        recorder = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="playback相关">playback相关</h3><h4 id="audioplayer-kt">AudioPlayer.kt</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">AudioPlayer</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">playFile</span><span class="params">(file: <span class="type">File</span>)</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">stop</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="androidaudioplayer-kt">AndroidAudioPlayer.kt</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.media.MediaPlayer</span><br><span class="line"><span class="keyword">import</span> androidx.core.net.toUri</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AndroidAudioPlayer</span>(</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> context: Context</span><br><span class="line">): AudioPlayer &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> player: MediaPlayer? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">playFile</span><span class="params">(file: <span class="type">File</span>)</span></span> &#123;</span><br><span class="line">        MediaPlayer.create(context, file.toUri()).apply &#123;</span><br><span class="line">            player = <span class="keyword">this</span></span><br><span class="line">            start()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">stop</span><span class="params">()</span></span> &#123;</span><br><span class="line">        player?.stop()</span><br><span class="line">        player?.release()</span><br><span class="line">        player = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用">使用</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.Manifest</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.activity.ComponentActivity</span><br><span class="line"><span class="keyword">import</span> androidx.activity.compose.setContent</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.Arrangement</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.Column</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.fillMaxSize</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material.Button</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material.MaterialTheme</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material.Surface</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material.Text</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.Composable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Alignment</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.tooling.preview.Preview</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">ComponentActivity</span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> recorder <span class="keyword">by</span> lazy &#123;</span><br><span class="line">        AndroidAudioRecorder(applicationContext)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> player <span class="keyword">by</span> lazy &#123;</span><br><span class="line">        AndroidAudioPlayer(applicationContext)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> audioFile: File? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        ActivityCompat.requestPermissions(</span><br><span class="line">            <span class="keyword">this</span>,</span><br><span class="line">            arrayOf(Manifest.permission.RECORD_AUDIO),</span><br><span class="line">            <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">        setContent &#123;</span><br><span class="line">            AudioRecorderTheme &#123;</span><br><span class="line">                Column(</span><br><span class="line">                    modifier = Modifier.fillMaxSize(),</span><br><span class="line">                    verticalArrangement = Arrangement.Center,</span><br><span class="line">                    horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">                ) &#123;</span><br><span class="line">                    Button(onClick = &#123;</span><br><span class="line">                        File(cacheDir, <span class="string">&quot;audio.mp3&quot;</span>).also &#123;</span><br><span class="line">                            recorder.start(it)</span><br><span class="line">                            audioFile = it</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                        Text(text = <span class="string">&quot;Start recording&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Button(onClick = &#123;</span><br><span class="line">                        recorder.stop()</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                        Text(text = <span class="string">&quot;Stop recording&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Button(onClick = &#123;</span><br><span class="line">                        player.playFile(audioFile ?: <span class="keyword">return</span><span class="symbol">@Button</span>)</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                        Text(text = <span class="string">&quot;Play&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Button(onClick = &#123;</span><br><span class="line">                        player.stop()</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                        Text(text = <span class="string">&quot;Stop playing&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;record相关&quot;&gt;record相关&lt;/h3&gt;
&lt;h4 id=&quot;audiorecorder-kt&quot;&gt;AudioRecorder.kt&lt;/h4&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="个人资料" scheme="https://www.yuanyuan.blog/categories/%E4%B8%AA%E4%BA%BA%E8%B5%84%E6%96%99/"/>
    
    
    <category term="Android" scheme="https://www.yuanyuan.blog/tags/Android/"/>
    
  </entry>
  
</feed>
